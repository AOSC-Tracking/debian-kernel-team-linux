#!/bin/bash -eu

KERNEL_RELEASE="$1"

PATH=/usr/sbin:/sbin:/usr/bin:/bin

case ${ADT_REBOOT_MARK:-setup} in
    setup)
        make headers_install

        # Ignore compiler warnings
        {
            make -C tools/testing/selftests &&
                make -C tools/testing/selftests/memfd build_fuse
        } 2>&1 || echo >&2 "Build failed"

        kexec -l /boot/vmlinuz-${KERNEL_RELEASE} --initrd /boot/initrd.img-${KERNEL_RELEASE} --reuse-cmdline
        /tmp/autopkgtest-reboot test
        ;;

    test)
        if [ "$(uname -r)" != "${KERNEL_RELEASE}" ]; then
            echo >&2 "Should be running: $ver"
            echo >&2 "Actually running: $(uname -r)"
            exit 1
        fi

        # Some tests will write to stderr despite being successful,
        # and the exit code from make will be 0 even if tests failed.
        # So we have to do some post-analysis...
        set -o pipefail
        {
            make -C tools/testing/selftests quicktest=1 run_tests &&
            make -C tools/testing/selftests/cpu-hotplug run_full_test &&
            make -C tools/testing/selftests/memory-hotplug run_full_test &&
            make -C tools/testing/selftests/memfd run_fuse &&
            make -C tools/testing/selftests/timers run_destructive_tests
        } 2>&1 | tee $AUTOPKGTEST_TMP/log
        set +o pipefail
        if grep -E '\[(FAIL|UNSUPPORTED)\]|recipe for target .run_tests. failed' $AUTOPKGTEST_TMP/log | \
        grep -q -v \
            -e '^selftests: fw_userhelper.sh \[FAIL\]' \
            -e 'ftrace - function profiler with function tracing   \[UNSUPPORTED\]' \
            -e '^selftests: ftracetest \[FAIL\]' \
            -e '|| echo .*\[FAIL\]' \
            ; then
            echo >&2 "Unexpected failures found"
        fi
        ;;
esac
