diff -urN linux-m68k/arch/m68k/atari/stdma.c linux-schmitz/arch/m68k/atari/stdma.c
--- linux-m68k/arch/m68k/atari/stdma.c	2006-09-20 05:42:06.000000000 +0200
+++ linux-schmitz/arch/m68k/atari/stdma.c	2006-11-19 21:37:26.000000000 +0100
@@ -48,7 +48,7 @@
 static void *stdma_isr_data;			/* data passed to isr */
 static DECLARE_WAIT_QUEUE_HEAD(stdma_wait);	/* wait queue for ST-DMA */
 
-
+static unsigned long stdma_locked_from, stdma_released_from;
 
 
 /***************************** Prototypes *****************************/
@@ -90,6 +90,9 @@
 	stdma_locked   = 1;
 	stdma_isr      = handler;
 	stdma_isr_data = data;
+
+	stdma_locked_from =  __builtin_return_address(0);
+
 	local_irq_restore(flags);
 }
 
@@ -114,6 +117,7 @@
 	stdma_locked   = 0;
 	stdma_isr      = NULL;
 	stdma_isr_data = NULL;
+	stdma_released_from =  __builtin_return_address(0);
 	wake_up(&stdma_wait);
 
 	local_irq_restore(flags);
@@ -159,6 +163,29 @@
 
 
 /*
+ * Function: int stdma_debug( void )
+ *
+ * Purpose: Report current ST-DMA locking status.
+ * Note: Returned status is only valid if ints are disabled while calling and
+ *       as long as they remain disabled.
+ *       If called with ints enabled, status can change only from locked to
+ *       unlocked, because ints may not lock the ST-DMA.
+ *
+ * Inputs: none
+ *
+ * Returns: none
+ *
+ */
+
+void stdma_debug(void)
+{
+        printk("stdma_debug at %p: status %d, locked from %p unlocked from %p\n",
+                __builtin_return_address(0), stdma_locked, stdma_locked_from, 
+                stdma_released_from);
+	return;
+}
+
+/*
  * Function: void stdma_init( void )
  *
  * Purpose: Initialize the ST-DMA chip access controlling.
@@ -175,7 +202,9 @@
 void __init stdma_init(void)
 {
 	stdma_isr = NULL;
-	request_irq(IRQ_MFP_FDC, stdma_int, IRQ_TYPE_SLOW,
+	stdma_locked_from = NULL;
+	stdma_released_from = NULL;
+	request_irq(IRQ_MFP_FDC, stdma_int, IRQ_TYPE_SLOW /* | SA_SHIRQ */,
 	            "ST-DMA: floppy/ACSI/IDE/Falcon-SCSI", stdma_int);
 }
 
diff -urN linux-m68k/arch/m68k/atari/time.c linux-schmitz/arch/m68k/atari/time.c
--- linux-m68k/arch/m68k/atari/time.c	2006-11-19 21:35:33.000000000 +0100
+++ linux-schmitz/arch/m68k/atari/time.c	2006-11-19 21:37:26.000000000 +0100
@@ -217,7 +217,7 @@
 	if (in_atomic() || irqs_disabled())
 	    mdelay(1);
 	else
-	    schedule_timeout_interruptible(HWCLK_POLL_INTERVAL);
+        schedule_timeout_interruptible(HWCLK_POLL_INTERVAL);
     }
 
     local_irq_save(flags);
diff -urN linux-m68k/arch/m68k/kernel/entry.S linux-schmitz/arch/m68k/kernel/entry.S
--- linux-m68k/arch/m68k/kernel/entry.S	2006-11-19 21:35:33.000000000 +0100
+++ linux-schmitz/arch/m68k/kernel/entry.S	2006-11-19 21:37:26.000000000 +0100
@@ -711,4 +711,28 @@
 	.long sys_inotify_init
 	.long sys_inotify_add_watch	/* 285 */
 	.long sys_inotify_rm_watch
+	.long sys_migrate_pages
+	.long sys_openat
+	.long sys_mkdirat
+	.long sys_mknodat		/* 290 */
+	.long sys_fchownat
+	.long sys_futimesat
+	.long sys_fstatat64
+	.long sys_unlinkat
+	.long sys_renameat		/* 295 */
+	.long sys_linkat
+	.long sys_symlinkat
+	.long sys_readlinkat
+	.long sys_fchmodat
+	.long sys_faccessat		/* 300 */
+	.long sys_ni_syscall		/* Reserved for pselect6 */
+	.long sys_ni_syscall		/* Reserved for ppoll */
+	.long sys_unshare
+	.long sys_set_robust_list
+	.long sys_get_robust_list	/* 305 */
+	.long sys_splice
+	.long sys_sync_file_range
+	.long sys_tee
+	.long sys_vmsplice
+	.long sys_move_pages		/* 310 */
 
