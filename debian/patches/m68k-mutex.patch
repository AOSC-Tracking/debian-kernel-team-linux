Log message:
wrap direct thread_info access

Modified files:
    linux/kernel:
	mutex-debug.c mutex.c 


Index: linux/kernel/mutex-debug.c
Stats: 6 modifications
http://linux-m68k-cvs.ubb.ca/c/cvsweb/linux/kernel/mutex%2ddebug%2ec.diff?r1=1.1.1.1&r2=1.2
========================================================================
--- linux/kernel/mutex-debug.c	9 Apr 2006 17:00:58 -0000	1.1.1.1
+++ linux/kernel/mutex-debug.c	9 May 2006 18:50:42 -0000	1.2
@@ -149,7 +149,7 @@
 			continue;
 		lock = list_entry(curr, struct mutex, held_list);
 		t = lock->owner;
-		if (filter && (t != filter->thread_info))
+		if (filter && (t != task_thread_info(filter)))
 			continue;
 		count++;
 		cursor = curr->next;
@@ -312,7 +312,7 @@
 	list_for_each_safe(curr, next, &debug_mutex_held_locks) {
 		lock = list_entry(curr, struct mutex, held_list);
 		t = lock->owner;
-		if (t != task->thread_info)
+		if (t != task_thread_info(task))
 			continue;
 		list_del_init(curr);
 		DEBUG_OFF();
@@ -321,7 +321,7 @@
 		printk("BUG: %s/%d, lock held at task exit time!\n",
 			task->comm, task->pid);
 		printk_lock(lock, 1);
-		if (lock->owner != task->thread_info)
+		if (lock->owner != task_thread_info(task))
 			printk("exiting task is not even the owner??\n");
 		return;
 	}
Index: linux/kernel/mutex.c
Stats: 10 modifications
http://linux-m68k-cvs.ubb.ca/c/cvsweb/linux/kernel/mutex%2ec.diff?r1=1.1.1.1&r2=1.2
========================================================================
--- linux/kernel/mutex.c	9 Apr 2006 17:00:58 -0000	1.1.1.1
+++ linux/kernel/mutex.c	9 May 2006 18:50:42 -0000	1.2
@@ -130,7 +130,7 @@
 
 	spin_lock_mutex(&lock->wait_lock);
 
-	debug_mutex_add_waiter(lock, &waiter, task->thread_info, ip);
+	debug_mutex_add_waiter(lock, &waiter, task_thread_info(task), ip);
 
 	/* add waiting tasks to the end of the waitqueue (FIFO): */
 	list_add_tail(&waiter.list, &lock->wait_list);
@@ -156,7 +156,7 @@
 		 */
 		if (unlikely(state == TASK_INTERRUPTIBLE &&
 						signal_pending(task))) {
-			mutex_remove_waiter(lock, &waiter, task->thread_info);
+			mutex_remove_waiter(lock, &waiter, task_thread_info(task));
 			spin_unlock_mutex(&lock->wait_lock);
 
 			debug_mutex_free_waiter(&waiter);
@@ -171,8 +171,8 @@
 	}
 
 	/* got the lock - rejoice! */
-	mutex_remove_waiter(lock, &waiter, task->thread_info);
-	debug_mutex_set_owner(lock, task->thread_info __IP__);
+	mutex_remove_waiter(lock, &waiter, task_thread_info(task));
+	debug_mutex_set_owner(lock, task_thread_info(task) __IP__);
 
 	/* set it to 0 if there are no waiters left: */
 	if (likely(list_empty(&lock->wait_list)))
@@ -183,7 +183,7 @@
 	debug_mutex_free_waiter(&waiter);
 
 	DEBUG_WARN_ON(list_empty(&lock->held_list));
-	DEBUG_WARN_ON(lock->owner != task->thread_info);
+	DEBUG_WARN_ON(lock->owner != task_thread_info(task));
 
 	return 0;
 }
-
To unsubscribe from this list: send the line "unsubscribe linux-m68k-cvscommit" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

