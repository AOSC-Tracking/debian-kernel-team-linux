From 26b8bc0f035bf509fddf213e42c541e47816dfc7 Mon Sep 17 00:00:00 2001
From: Geert Uytterhoeven <geert@linux-m68k.org>
Date: Tue, 18 Nov 2008 21:07:40 +0100
Subject: [PATCH] m68k: Atari EtherNAT warning fixes

drivers/net/atari_91C111.c: In function 'smc_rcv':
drivers/net/atari_91C111.c:538: warning: passing argument 2 of 'raw_insw' from incompatible pointer type
drivers/net/atari_91C111.c: In function 'smc_request_attrib':
drivers/net/atari_91C111.c:2100: warning: unused variable 'lp'
drivers/net/atari_91C111.c: In function 'smc_release_attrib':
drivers/net/atari_91C111.c:2115: warning: unused variable 'lp'
drivers/net/atari_91C111.c: In function 'smc_drv_probe':
drivers/net/atari_91C111.c:2305: warning: format '%d' expects type 'int', but argument 2 has type 'long unsigned int'

Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
---
 drivers/net/atari_91C111.c |    4 +---
 drivers/net/smc91x.h       |    4 ++--
 2 files changed, 3 insertions(+), 5 deletions(-)

diff --git a/drivers/net/atari_91C111.c b/drivers/net/atari_91C111.c
index f6f8a45..c441779 100644
--- a/drivers/net/atari_91C111.c
+++ b/drivers/net/atari_91C111.c
@@ -2097,7 +2097,6 @@ static int smc_request_attrib(struct platform_device *pdev,
 			      struct net_device *ndev)
 {
 	struct resource * res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "smc91x-attrib");
-	struct smc_local *lp = netdev_priv(ndev);
 
 	if (!res)
 		return 0;
@@ -2112,7 +2111,6 @@ static void smc_release_attrib(struct platform_device *pdev,
 			       struct net_device *ndev)
 {
 	struct resource * res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "smc91x-attrib");
-	struct smc_local *lp = netdev_priv(ndev);
 
 	if (res)
 		release_mem_region(res->start, ATTRIB_SIZE);
@@ -2302,7 +2300,7 @@ static int smc_drv_probe(struct platform_device *pdev)
 			timd = 80;
 		else if (timd > 255)
 			timd = 255;
-		printk(KERN_INFO "Timer D frequency: %d Hz\n", (38400UL/(unsigned int)timd));
+		printk(KERN_INFO "Timer D frequency: %u Hz\n", 38400/timd);
 		/* set Timer D data Register */
 		mfp.tim_dt_d = timd;	/* 200 Hz */
 		/* start timer D, div = 1:100 */
diff --git a/drivers/net/smc91x.h b/drivers/net/smc91x.h
index 33749d7..c9fa11f 100644
--- a/drivers/net/smc91x.h
+++ b/drivers/net/smc91x.h
@@ -1269,7 +1269,7 @@ static const char * chip_ids[ 16 ] =  {
 					 DATA_REG(lp));		\
 			}						\
 		} else if (SMC_16BIT(lp))				\
-			SMC_outsw(ioaddr, DATA_REG(lp), p, (l) >> 1);	\
+			SMC_outsw(ioaddr, DATA_REG(lp), (u16 *) p, (l) >> 1);	\
 		else if (SMC_8BIT(lp))				\
 			SMC_outsb(ioaddr, DATA_REG(lp), p, l);	\
 	} while (0)
@@ -1305,7 +1305,7 @@ static const char * chip_ids[ 16 ] =  {
 			__len += 2;					\
 			SMC_insl(__ioaddr, DATA_REG(lp), __ptr, __len>>2); \
 		} else if (SMC_16BIT(lp))				\
-			SMC_insw(ioaddr, DATA_REG(lp), p, (l) >> 1);	\
+			SMC_insw(ioaddr, DATA_REG(lp), (u16 *) p, (l) >> 1);	\
 		else if (SMC_8BIT(lp))				\
 			SMC_insb(ioaddr, DATA_REG(lp), p, l);		\
 	} while (0)
-- 
1.5.6.5

