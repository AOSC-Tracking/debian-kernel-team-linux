commit bb363507f6359762f368b09bf36309425768910a
Author: Alok Kataria <akataria@vmware.com>
Date:   Mon Jan 26 21:00:23 2009 +0100

    UBUNTU: x86: vmware: look for DMI string in the product serial key
    
    Bug: #319945
    
        Impact: Should permit VMware detection on older platforms where the
        vendor is changed.  Could theoretically cause a regression if some
        weird serial number scheme contains the string "VMware" by pure
        chance.  Seems unlikely, especially with the mixed case.
    
        In some user configured cases, VMware may choose not to put a VMware specific
        DMI string, but the product serial key is always there and is VMware specific.
        Add a interface to check the serial key, when checking for VMware in the DMI
        information.
    
        Signed-off-by: Alok N Kataria <akataria@vmware.com>
        Signed-off-by: H. Peter Anvin <hpa@zytor.com>
        Acked-by: Tim Gardner <tim.gardner@canonical.com>
        Acked-by: Stefan Bader <stefan.bader@canonical.com>

Backported to Debian's 2.6.26 by dann frazier <dannf@debian.org>

diff -urpN a/drivers/firmware/dmi_scan.c b/drivers/firmware/dmi_scan.c
--- a/drivers/firmware/dmi_scan.c	2008-07-13 15:51:29.000000000 -0600
+++ b/drivers/firmware/dmi_scan.c	2009-07-19 17:15:17.000000000 -0600
@@ -452,6 +452,17 @@ const char *dmi_get_system_info(int fiel
 }
 EXPORT_SYMBOL(dmi_get_system_info);
 
+/**
+ *	dmi_name_in_serial - 	Check if string is in the DMI product serial
+ *				information.
+ */
+int dmi_name_in_serial(const char *str)
+{
+	int f = DMI_PRODUCT_SERIAL;
+	if (dmi_ident[f] && strstr(dmi_ident[f], str))
+		return 1;
+	return 0;
+}
 
 /**
  *	dmi_name_in_vendors - Check if string is anywhere in the DMI vendor information.
diff -urpN a/include/linux/dmi.h b/include/linux/dmi.h
--- a/include/linux/dmi.h	2008-07-13 15:51:29.000000000 -0600
+++ b/include/linux/dmi.h	2009-07-19 17:15:17.000000000 -0600
@@ -81,6 +81,7 @@ extern const struct dmi_device * dmi_fin
 extern void dmi_scan_machine(void);
 extern int dmi_get_year(int field);
 extern int dmi_name_in_vendors(const char *str);
+extern int dmi_name_in_serial(const char *str);
 extern int dmi_available;
 extern int dmi_walk(void (*decode)(const struct dmi_header *));
 
@@ -93,6 +94,7 @@ static inline const struct dmi_device * 
 static inline void dmi_scan_machine(void) { return; }
 static inline int dmi_get_year(int year) { return 0; }
 static inline int dmi_name_in_vendors(const char *s) { return 0; }
+static inline int dmi_name_in_serial(const char *s) { return 0; }
 #define dmi_available 0
 static inline int dmi_walk(void (*decode)(const struct dmi_header *))
 	{ return -1; }
