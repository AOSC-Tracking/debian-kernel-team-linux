commit 19f0a28fc4adf05a06f47835ca4e2e33da2a321b
Author: dann frazier <dannf@hp.com>
Date:   Sat Feb 20 12:20:50 2010 -0700

    [Backported to Debian's 2.6.26]
    commit a79c30e57c0eac03aae8be4649958f8592141d20
    Author: Oleg Nesterov <oleg@redhat.com>
    Date:   Tue Jun 23 21:25:32 2009 +0200
    
        mm_for_maps: simplify, use ptrace_may_access()
    
        commit 13f0feafa6b8aead57a2a328e2fca6a5828bf286 upstream.

diff --git a/fs/proc/base.c b/fs/proc/base.c
index 3b45537..51e7188 100644
--- a/fs/proc/base.c
+++ b/fs/proc/base.c
@@ -247,19 +247,19 @@ struct mm_struct *mm_for_maps(struct task_struct *task)
 	struct mm_struct *mm = get_task_mm(task);
 	if (!mm)
 		return NULL;
+	if (mm != current->mm) {
+		/*
+		 * task->mm can be changed before security check,
+		 * in that case we must notice the change after.
+		 */
+		if (!ptrace_may_attach(task) ||
+		    mm != task->mm) {
+			mmput(mm);
+			return NULL;
+		}
+	}
 	down_read(&mm->mmap_sem);
-	task_lock(task);
-	if (task->mm != mm)
-		goto out;
-	if (task->mm != current->mm && __ptrace_may_attach(task) < 0)
-		goto out;
-	task_unlock(task);
 	return mm;
-out:
-	task_unlock(task);
-	up_read(&mm->mmap_sem);
-	mmput(mm);
-	return NULL;
 }
 
 static int proc_pid_cmdline(struct task_struct *task, char * buffer)
