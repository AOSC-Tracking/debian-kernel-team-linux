commit 1d1221f375c94ef961ba8574ac4f85c8870ddd51
Author: Vasiliy Kulikov <segoon@openwall.com>
Date:   Fri Jun 24 16:08:38 2011 +0400

    proc: restrict access to /proc/PID/io
    
    /proc/PID/io may be used for gathering private information.  E.g.  for
    openssh and vsftpd daemons wchars/rchars may be used to learn the
    precise password length.  Restrict it to processes being able to ptrace
    the target process.
    
    ptrace_may_access() is needed to prevent keeping open file descriptor of
    "io" file, executing setuid binary and gathering io information of the
    setuid'ed process.
    
    Signed-off-by: Vasiliy Kulikov <segoon@openwall.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [dannf: backported to Debian's 2.6.26]

diff --git a/fs/proc/base.c b/fs/proc/base.c
index 3f20d5d..bce2890 100644
--- a/fs/proc/base.c
+++ b/fs/proc/base.c
@@ -2378,6 +2378,9 @@ static int proc_base_fill_cache(struct file *filp, void *dirent,
 #ifdef CONFIG_TASK_IO_ACCOUNTING
 static int proc_pid_io_accounting(struct task_struct *task, char *buffer)
 {
+	if (!ptrace_may_attach(task))
+		return -EACCES;
+
 	return sprintf(buffer,
 #ifdef CONFIG_TASK_XACCT
 			"rchar: %llu\n"
@@ -2470,7 +2473,7 @@ static const struct pid_entry tgid_base_stuff[] = {
 	REG("coredump_filter", S_IRUGO|S_IWUSR, coredump_filter),
 #endif
 #ifdef CONFIG_TASK_IO_ACCOUNTING
-	INF("io",	S_IRUGO, pid_io_accounting),
+	INF("io",	S_IRUSR, pid_io_accounting),
 #endif
 };
 
