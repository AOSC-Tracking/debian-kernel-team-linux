commit 69765529d701c838df19ea1f5ad2f33a528261ae
Author: Steve French <sfrench@us.ibm.com>
Date:   Tue Feb 17 01:29:40 2009 +0000

    [CIFS] Fix oops in cifs_strfromUCS_le mounting to servers which do not specify their OS
    
    Fixes kernel bug #10451 http://bugzilla.kernel.org/show_bug.cgi?id=10451
    
    Certain NAS appliances do not set the operating system or network operating system
    fields in the session setup response on the wire.  cifs was oopsing on the unexpected
    zero length response fields (when trying to null terminate a zero length field).
    
    This fixes the oops.
    
    Acked-by: Jeff Layton <jlayton@redhat.com>
    CC: stable <stable@kernel.org>
    Signed-off-by: Steve French <sfrench@us.ibm.com>

Adjusted to apply to Debian's 2.6.26 by dann frazier <dannf@debian.org>

diff -urpN a/fs/cifs/sess.c b/fs/cifs/sess.c
--- a/fs/cifs/sess.c	2008-07-13 15:51:29.000000000 -0600
+++ b/fs/cifs/sess.c	2009-03-22 23:06:06.000000000 -0600
@@ -228,7 +228,7 @@ static int decode_unicode_ssetup(char **
 
 	kfree(ses->serverOS);
 	/* UTF-8 string will not grow more than four times as big as UCS-16 */
-	ses->serverOS = kzalloc(4 * len, GFP_KERNEL);
+	ses->serverOS = kzalloc((4 * len) + 2 /* trailing null */, GFP_KERNEL);
 	if (ses->serverOS != NULL)
 		cifs_strfromUCS_le(ses->serverOS, (__le16 *)data, len, nls_cp);
 	data += 2 * (len + 1);
@@ -241,7 +241,7 @@ static int decode_unicode_ssetup(char **
 		return rc;
 
 	kfree(ses->serverNOS);
-	ses->serverNOS = kzalloc(4 * len, GFP_KERNEL); /* BB this is wrong length FIXME BB */
+	ses->serverNOS = kzalloc((4 * len) + 2 /* trailing null */, GFP_KERNEL);
 	if (ses->serverNOS != NULL) {
 		cifs_strfromUCS_le(ses->serverNOS, (__le16 *)data, len,
 				   nls_cp);
