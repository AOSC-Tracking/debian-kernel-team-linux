commit 1309d7afbed112f0e8e90be9af975550caa0076b
Author: Peter Huewe <huewe.external.infineon@googlemail.com>
Date:   Tue Mar 29 13:31:25 2011 +0200

    char/tpm: Fix unitialized usage of data buffer
    
    This patch fixes information leakage to the userspace by initializing
    the data buffer to zero.
    
    Reported-by: Peter Huewe <huewe.external@infineon.com>
    Signed-off-by: Peter Huewe <huewe.external@infineon.com>
    Signed-off-by: Marcel Selhorst <m.selhorst@sirrix.com>
    [ Also removed the silly "* sizeof(u8)".  If that isn't 1, we have way
      deeper problems than a simple multiplication can fix.   - Linus ]
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [dannf: adjusted to apply to Debian's 2.6.26]

--- linux-source-2.6.26.orig/drivers/char/tpm/tpm.c	2008-07-13 15:51:29.000000000 -0600
+++ linux-source-2.6.26/drivers/char/tpm/tpm.c	2011-05-31 23:53:14.451994322 -0600
@@ -922,7 +922,7 @@ int tpm_open(struct inode *inode, struct
 
 	spin_unlock(&driver_lock);
 
-	chip->data_buffer = kmalloc(TPM_BUFSIZE * sizeof(u8), GFP_KERNEL);
+	chip->data_buffer = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
 	if (chip->data_buffer == NULL) {
 		chip->num_opens--;
 		put_device(chip->dev);
