From: Ben Hutchings <ben@decadent.org.uk>
Date: Tue, 03 Jul 2018 06:19:07 +0100
Subject: liblockdep: Stub task_struct::state
Forwarded: https://lore.kernel.org/lkml/20180828233752.GG18030@decadent.org.uk/T/#u

lockdep_print_held_locks() now checks task_struct::state.  Define it
so that all tasks are assumed to be running, since we have no
reasonble way to tell in user-space.

Fixes: 8cc05c71ba5f ("locking/lockdep: Move sanity check to inside ...")
Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
---
--- a/tools/include/linux/lockdep.h
+++ b/tools/include/linux/lockdep.h
@@ -31,12 +31,16 @@ struct task_struct {
 	gfp_t lockdep_reclaim_gfp;
 	int pid;
 	char comm[17];
+	long state;
 };
 
 extern struct task_struct *__curr(void);
 
 #define current (__curr())
 
+/* lockdep checks task_struct::state == TASK_RUNNING */
+#define TASK_RUNNING 0
+
 static inline int debug_locks_off(void)
 {
 	return 1;
