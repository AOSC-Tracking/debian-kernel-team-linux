--- linux-2.6.16.43-vs2.0.3-rc1/include/linux/vs_socket.h	2007-03-28 02:23:16 +0200
+++ linux-2.6.16.43-vs2.0.3-rc2/include/linux/vs_socket.h	2007-03-17 16:20:04 +0100
@@ -36,8 +36,8 @@ static inline void __vx_acc_sock(struct 
 	if (vxi) {
 		int type = vx_sock_type(family);
 
-		atomic_inc(&vxi->cacct.sock[type][pos].count);
-		atomic_add(size, &vxi->cacct.sock[type][pos].total);
+		atomic_long_inc(&vxi->cacct.sock[type][pos].count);
+		atomic_long_add(size, &vxi->cacct.sock[type][pos].total);
 	}
 }
 
--- linux-2.6.16.43-vs2.0.3-rc1/include/linux/vserver/cvirt_def.h	2007-03-28 02:23:16 +0200
+++ linux-2.6.16.43-vs2.0.3-rc2/include/linux/vserver/cvirt_def.h	2007-03-17 16:20:04 +0100
@@ -62,8 +62,8 @@ struct _vx_cvirt {
 };
 
 struct _vx_sock_acc {
-	atomic_t count;
-	atomic_t total;
+	atomic_long_t count;
+	atomic_long_t total;
 };
 
 /* context sub struct */
--- linux-2.6.16.43-vs2.0.3-rc1/kernel/vserver/cvirt_init.h	2007-03-28 02:23:17 +0200
+++ linux-2.6.16.43-vs2.0.3-rc2/kernel/vserver/cvirt_init.h	2007-03-17 16:20:04 +0100
@@ -68,8 +68,8 @@ static inline void vx_info_init_cacct(st
 
 	for (i=0; i<5; i++) {
 		for (j=0; j<3; j++) {
-			atomic_set(&cacct->sock[i][j].count, 0);
-			atomic_set(&cacct->sock[i][j].total, 0);
+			atomic_long_set(&cacct->sock[i][j].count, 0);
+			atomic_long_set(&cacct->sock[i][j].total, 0);
 		}
 	}
 }
--- linux-2.6.16.43-vs2.0.3-rc1/kernel/vserver/cvirt_proc.h	2007-03-28 02:23:17 +0200
+++ linux-2.6.16.43-vs2.0.3-rc2/kernel/vserver/cvirt_proc.h	2007-03-17 16:20:04 +0100
@@ -58,13 +58,13 @@ static inline int vx_info_proc_cvirt(str
 
 static inline long vx_sock_count(struct _vx_cacct *cacct, int type, int pos)
 {
-	return atomic_read(&cacct->sock[type][pos].count);
+	return atomic_long_read(&cacct->sock[type][pos].count);
 }
 
 
 static inline long vx_sock_total(struct _vx_cacct *cacct, int type, int pos)
 {
-	return atomic_read(&cacct->sock[type][pos].total);
+	return atomic_long_read(&cacct->sock[type][pos].total);
 }
 
 static inline int vx_info_proc_cacct(struct _vx_cacct *cacct, char *buffer)
