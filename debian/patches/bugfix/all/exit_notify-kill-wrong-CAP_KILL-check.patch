commit 432870dab85a2f69dc417022646cb9a70acf7f94
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Mon Apr 6 16:16:02 2009 +0200

    exit_notify: kill the wrong capable(CAP_KILL) check
    
    The CAP_KILL check in exit_notify() looks just wrong, kill it.
    
    Whatever logic we have to reset ->exit_signal, the malicious user
    can bypass it if it execs the setuid application before exiting.
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Acked-by: Serge Hallyn <serue@us.ibm.com>
    Acked-by: Roland McGrath <roland@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Adjusted to apply to Debian's 2.6.18 by dann frazier <dannf@debian.org>

diff -urpN linux-source-2.6.18.orig/kernel/exit.c linux-source-2.6.18/kernel/exit.c
--- linux-source-2.6.18.orig/kernel/exit.c	2008-12-25 14:04:13.000000000 -0700
+++ linux-source-2.6.18/kernel/exit.c	2009-04-18 18:46:03.000000000 -0600
@@ -806,8 +806,7 @@ static void exit_notify(struct task_stru
 	
 	if (tsk->exit_signal != SIGCHLD && tsk->exit_signal != -1 &&
 	    ( tsk->parent_exec_id != t->self_exec_id  ||
-	      tsk->self_exec_id != tsk->parent_exec_id)
-	    && !capable(CAP_KILL))
+	     tsk->self_exec_id != tsk->parent_exec_id))
 		tsk->exit_signal = SIGCHLD;
 
 
