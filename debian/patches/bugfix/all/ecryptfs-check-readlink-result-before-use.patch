commit a17d5232de7b53d34229de79ec22f4bb04adb7e4
Author: Duane Griffin <duaneg@dghda.com>
Date:   Fri Dec 19 20:47:10 2008 +0000

    eCryptfs: check readlink result was not an error before using it
    
    The result from readlink is being used to index into the link name
    buffer without checking whether it is a valid length. If readlink
    returns an error this will fault or cause memory corruption.
    
    Cc: Tyler Hicks <tyhicks@linux.vnet.ibm.com>
    Cc: Dustin Kirkland <kirkland@canonical.com>
    Cc: ecryptfs-devel@lists.launchpad.net
    Signed-off-by: Duane Griffin <duaneg@dghda.com>
    Acked-by: Michael Halcrow <mhalcrow@us.ibm.com>
    Acked-by: Tyler Hicks <tyhicks@linux.vnet.ibm.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

Adjusted to apply to Debian's 2.6.24 by dann frazier <dannf@debian.org>

diff -urpN linux-source-2.6.24.orig/fs/ecryptfs/inode.c linux-source-2.6.24/fs/ecryptfs/inode.c
--- linux-source-2.6.24.orig/fs/ecryptfs/inode.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/fs/ecryptfs/inode.c	2009-02-09 22:57:01.000000000 -0700
@@ -660,10 +660,11 @@ static void *ecryptfs_follow_link(struct
 	ecryptfs_printk(KERN_DEBUG, "Calling readlink w/ "
 			"dentry->d_name.name = [%s]\n", dentry->d_name.name);
 	rc = dentry->d_inode->i_op->readlink(dentry, (char __user *)buf, len);
-	buf[rc] = '\0';
 	set_fs(old_fs);
 	if (rc < 0)
 		goto out_free;
+	else
+		buf[rc] = '\0';
 	rc = 0;
 	nd_set_link(nd, buf);
 	goto out;
