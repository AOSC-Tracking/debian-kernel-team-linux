diff -urpN linux-source-2.6.24.orig/fs/proc/base.c linux-source-2.6.24/fs/proc/base.c
--- linux-source-2.6.24.orig/fs/proc/base.c	2010-02-22 17:31:39.000000000 -0700
+++ linux-source-2.6.24/fs/proc/base.c	2010-02-22 17:32:37.000000000 -0700
@@ -205,9 +205,8 @@ static int proc_root_link(struct inode *
 struct mm_struct *mm_for_maps(struct task_struct *task)
 {
 	struct mm_struct *mm = get_task_mm(task);
-	if (!mm)
-		return NULL;
-	if (mm != current->mm) {
+
+	if (mm && mm != current->mm) {
 		/*
 		 * task->mm can be changed before security check,
 		 * in that case we must notice the change after.
@@ -215,10 +214,9 @@ struct mm_struct *mm_for_maps(struct tas
 		if (!ptrace_may_attach(task) ||
 		    mm != task->mm) {
 			mmput(mm);
-			return NULL;
+			mm = NULL;
 		}
 	}
-	down_read(&mm->mmap_sem);
 	return mm;
 }
 
diff -urpN linux-source-2.6.24.orig/fs/proc/task_mmu.c linux-source-2.6.24/fs/proc/task_mmu.c
--- linux-source-2.6.24.orig/fs/proc/task_mmu.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/fs/proc/task_mmu.c	2010-02-22 17:32:37.000000000 -0700
@@ -392,6 +392,7 @@ static void *m_start(struct seq_file *m,
 
 	if (last_addr == -1UL)
 		return NULL;
+	down_read(&mm->mmap_sem);
 
 	priv->task = get_pid_task(priv->pid, PIDTYPE_PID);
 	if (!priv->task)
diff -urpN linux-source-2.6.24.orig/fs/proc/task_nommu.c linux-source-2.6.24/fs/proc/task_nommu.c
--- linux-source-2.6.24.orig/fs/proc/task_nommu.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/fs/proc/task_nommu.c	2010-02-22 17:32:37.000000000 -0700
@@ -171,6 +171,7 @@ static void *m_start(struct seq_file *m,
 		priv->task = NULL;
 		return NULL;
 	}
+	down_read(&mm->mmap_sem);
 
 	/* start from the Nth VMA */
 	for (vml = mm->context.vmlist; vml; vml = vml->next)
