From 938bb9f5e840eddbf54e4f62f6c5ba9b3ae12c9d Mon Sep 17 00:00:00 2001
From: Heiko Carstens <heiko.carstens@de.ibm.com>
Date: Wed, 14 Jan 2009 14:14:30 +0100
Subject: [PATCH 38/44] [CVE-2009-0029] System call wrappers part 28

From: Heiko Carstens <heiko.carstens@de.ibm.com>

commit 938bb9f5e840eddbf54e4f62f6c5ba9b3ae12c9d upstream.

Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

Backported to Debian's 2.6.18 by dann frazier <dannf@debian.org>

diff -urpN linux-source-2.6.18.orig/fs/inotify_user.c linux-source-2.6.18/fs/inotify_user.c
--- linux-source-2.6.18.orig/fs/inotify_user.c	2006-09-19 21:42:06.000000000 -0600
+++ linux-source-2.6.18/fs/inotify_user.c	2009-01-26 08:41:20.000000000 -0700
@@ -531,7 +531,7 @@ static const struct inotify_operations i
 	.destroy_watch	= free_inotify_user_watch,
 };
 
-asmlinkage long sys_inotify_init(void)
+SYSCALL_DEFINE0(inotify_init)
 {
 	struct inotify_device *dev;
 	struct inotify_handle *ih;
diff -urpN linux-source-2.6.18.orig/fs/ioprio.c linux-source-2.6.18/fs/ioprio.c
--- linux-source-2.6.18.orig/fs/ioprio.c	2006-09-19 21:42:06.000000000 -0600
+++ linux-source-2.6.18/fs/ioprio.c	2009-01-26 08:41:20.000000000 -0700
@@ -54,7 +54,7 @@ static int set_task_ioprio(struct task_s
 	return 0;
 }
 
-asmlinkage long sys_ioprio_set(int which, int who, int ioprio)
+SYSCALL_DEFINE3(ioprio_set, int, which, int, who, int, ioprio)
 {
 	int class = IOPRIO_PRIO_CLASS(ioprio);
 	int data = IOPRIO_PRIO_DATA(ioprio);
@@ -163,7 +163,7 @@ int ioprio_best(unsigned short aprio, un
 		return aprio;
 }
 
-asmlinkage long sys_ioprio_get(int which, int who)
+SYSCALL_DEFINE2(ioprio_get, int, which, int, who)
 {
 	struct task_struct *g, *p;
 	struct user_struct *user;
@@ -224,4 +224,3 @@ asmlinkage long sys_ioprio_get(int which
 	read_unlock_irq(&tasklist_lock);
 	return ret;
 }
-
diff -urpN linux-source-2.6.18.orig/mm/mempolicy.c linux-source-2.6.18/mm/mempolicy.c
--- linux-source-2.6.18.orig/mm/mempolicy.c	2006-09-19 21:42:06.000000000 -0600
+++ linux-source-2.6.18/mm/mempolicy.c	2009-01-26 08:41:20.000000000 -0700
@@ -866,10 +866,9 @@ static int copy_nodes_to_user(unsigned l
 	return copy_to_user(mask, nodes_addr(*nodes), copy) ? -EFAULT : 0;
 }
 
-asmlinkage long sys_mbind(unsigned long start, unsigned long len,
-			unsigned long mode,
-			unsigned long __user *nmask, unsigned long maxnode,
-			unsigned flags)
+SYSCALL_DEFINE6(mbind, unsigned long, start, unsigned long, len,
+		unsigned long, mode, unsigned long __user *, nmask,
+		unsigned long, maxnode, unsigned, flags)
 {
 	nodemask_t nodes;
 	int err;
@@ -881,8 +880,8 @@ asmlinkage long sys_mbind(unsigned long 
 }
 
 /* Set the process memory policy */
-asmlinkage long sys_set_mempolicy(int mode, unsigned long __user *nmask,
-		unsigned long maxnode)
+SYSCALL_DEFINE3(set_mempolicy, int, mode, unsigned long __user *, nmask,
+		unsigned long, maxnode)
 {
 	int err;
 	nodemask_t nodes;
@@ -895,9 +894,9 @@ asmlinkage long sys_set_mempolicy(int mo
 	return do_set_mempolicy(mode, &nodes);
 }
 
-asmlinkage long sys_migrate_pages(pid_t pid, unsigned long maxnode,
-		const unsigned long __user *old_nodes,
-		const unsigned long __user *new_nodes)
+SYSCALL_DEFINE4(migrate_pages, pid_t, pid, unsigned long, maxnode,
+		const unsigned long __user *, old_nodes,
+		const unsigned long __user *, new_nodes)
 {
 	struct mm_struct *mm;
 	struct task_struct *task;
@@ -960,10 +959,9 @@ out:
 
 
 /* Retrieve NUMA policy */
-asmlinkage long sys_get_mempolicy(int __user *policy,
-				unsigned long __user *nmask,
-				unsigned long maxnode,
-				unsigned long addr, unsigned long flags)
+SYSCALL_DEFINE5(get_mempolicy, int __user *, policy,
+		unsigned long __user *, nmask, unsigned long, maxnode,
+		unsigned long, addr, unsigned long, flags)
 {
 	int err, pval;
 	nodemask_t nodes;
diff -urpN linux-source-2.6.18.orig/mm/migrate.c linux-source-2.6.18/mm/migrate.c
--- linux-source-2.6.18.orig/mm/migrate.c	2009-01-25 23:22:47.000000000 -0700
+++ linux-source-2.6.18/mm/migrate.c	2009-01-26 08:41:20.000000000 -0700
@@ -860,10 +860,10 @@ set_status:
  * Move a list of pages in the address space of the currently executing
  * process.
  */
-asmlinkage long sys_move_pages(pid_t pid, unsigned long nr_pages,
-			const void __user * __user *pages,
-			const int __user *nodes,
-			int __user *status, int flags)
+SYSCALL_DEFINE6(move_pages, pid_t, pid, unsigned long, nr_pages,
+		const void __user * __user *, pages,
+		const int __user *, nodes,
+		int __user *, status, int, flags)
 {
 	int err = 0;
 	int i;
diff -urpN linux-source-2.6.18.orig/security/keys/keyctl.c linux-source-2.6.18/security/keys/keyctl.c
--- linux-source-2.6.18.orig/security/keys/keyctl.c	2009-01-25 23:20:42.000000000 -0700
+++ linux-source-2.6.18/security/keys/keyctl.c	2009-01-26 08:41:20.000000000 -0700
@@ -1059,8 +1059,8 @@ error:
 /*
  * the key control system call
  */
-asmlinkage long sys_keyctl(int option, unsigned long arg2, unsigned long arg3,
-			   unsigned long arg4, unsigned long arg5)
+SYSCALL_DEFINE5(keyctl, int, option, unsigned long, arg2, unsigned long, arg3,
+		unsigned long, arg4, unsigned long, arg5)
 {
 	switch (option) {
 	case KEYCTL_GET_KEYRING_ID:
