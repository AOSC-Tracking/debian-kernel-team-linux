commit d35c7b0e54a596c5a8134d75999b7f391a9c6550
Author: Ulrich Drepper <drepper@redhat.com>
Date:   Sat May 3 15:10:37 2008 -0400

    unified (weak) sys_pipe implementation
    
    This replaces the duplicated arch-specific versions of "sys_pipe()" with
    one unified implementation.  This removes almost 250 lines of duplicated
    code.
    
    It's marked __weak, so that *if* an architecture wants to override the
    default implementation it can do so by simply having its own replacement
    version, since many architectures use alternate calling conventions for
    the 'pipe()' system call for legacy reasons (ie traditional UNIX
    implementations often return the two file descriptors in registers)
    
    I still haven't changed the cris version even though Linus says the BKL
    isn't needed.  The arch maintainer can easily do it if there are really
    no obstacles.
    
    Signed-off-by: Ulrich Drepper <drepper@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Adjusted to apply to Debian's 2.6.24 by dann frazier <dannf@debian.org>

diff -urpN linux-source-2.6.24.orig/arch/arm/kernel/sys_arm.c linux-source-2.6.24/arch/arm/kernel/sys_arm.c
--- linux-source-2.6.24.orig/arch/arm/kernel/sys_arm.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/arch/arm/kernel/sys_arm.c	2009-01-21 00:27:33.000000000 -0700
@@ -34,23 +34,6 @@ extern unsigned long do_mremap(unsigned 
 			       unsigned long new_len, unsigned long flags,
 			       unsigned long new_addr);
 
-/*
- * sys_pipe() is the normal C calling standard for creating
- * a pipe. It's not the way unix traditionally does this, though.
- */
-asmlinkage int sys_pipe(unsigned long __user *fildes)
-{
-	int fd[2];
-	int error;
-
-	error = do_pipe(fd);
-	if (!error) {
-		if (copy_to_user(fildes, fd, 2*sizeof(int)))
-			error = -EFAULT;
-	}
-	return error;
-}
-
 /* common code for old and new mmaps */
 inline long do_mmap2(
 	unsigned long addr, unsigned long len,
diff -urpN linux-source-2.6.24.orig/arch/avr32/kernel/sys_avr32.c linux-source-2.6.24/arch/avr32/kernel/sys_avr32.c
--- linux-source-2.6.24.orig/arch/avr32/kernel/sys_avr32.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/arch/avr32/kernel/sys_avr32.c	2009-01-21 00:27:33.000000000 -0700
@@ -14,19 +14,6 @@
 #include <asm/mman.h>
 #include <asm/uaccess.h>
 
-asmlinkage int sys_pipe(unsigned long __user *filedes)
-{
-	int fd[2];
-	int error;
-
-	error = do_pipe(fd);
-	if (!error) {
-		if (copy_to_user(filedes, fd, sizeof(fd)))
-			error = -EFAULT;
-	}
-	return error;
-}
-
 asmlinkage long sys_mmap2(unsigned long addr, unsigned long len,
 			  unsigned long prot, unsigned long flags,
 			  unsigned long fd, off_t offset)
diff -urpN linux-source-2.6.24.orig/arch/frv/kernel/sys_frv.c linux-source-2.6.24/arch/frv/kernel/sys_frv.c
--- linux-source-2.6.24.orig/arch/frv/kernel/sys_frv.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/arch/frv/kernel/sys_frv.c	2009-01-21 00:27:37.000000000 -0700
@@ -28,23 +28,6 @@
 #include <asm/setup.h>
 #include <asm/uaccess.h>
 
-/*
- * sys_pipe() is the normal C calling standard for creating
- * a pipe. It's not the way unix traditionally does this, though.
- */
-asmlinkage long sys_pipe(unsigned long __user * fildes)
-{
-	int fd[2];
-	int error;
-
-	error = do_pipe(fd);
-	if (!error) {
-		if (copy_to_user(fildes, fd, 2*sizeof(int)))
-			error = -EFAULT;
-	}
-	return error;
-}
-
 asmlinkage long sys_mmap2(unsigned long addr, unsigned long len,
 			  unsigned long prot, unsigned long flags,
 			  unsigned long fd, unsigned long pgoff)
diff -urpN linux-source-2.6.24.orig/arch/h8300/kernel/sys_h8300.c linux-source-2.6.24/arch/h8300/kernel/sys_h8300.c
--- linux-source-2.6.24.orig/arch/h8300/kernel/sys_h8300.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/arch/h8300/kernel/sys_h8300.c	2009-01-21 00:27:37.000000000 -0700
@@ -27,23 +27,6 @@
 #include <asm/traps.h>
 #include <asm/unistd.h>
 
-/*
- * sys_pipe() is the normal C calling standard for creating
- * a pipe. It's not the way unix traditionally does this, though.
- */
-asmlinkage int sys_pipe(unsigned long * fildes)
-{
-	int fd[2];
-	int error;
-
-	error = do_pipe(fd);
-	if (!error) {
-		if (copy_to_user(fildes, fd, 2*sizeof(int)))
-			error = -EFAULT;
-	}
-	return error;
-}
-
 /* common code for old and new mmaps */
 static inline long do_mmap2(
 	unsigned long addr, unsigned long len,
diff -urpN linux-source-2.6.24.orig/arch/m68k/kernel/sys_m68k.c linux-source-2.6.24/arch/m68k/kernel/sys_m68k.c
--- linux-source-2.6.24.orig/arch/m68k/kernel/sys_m68k.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/arch/m68k/kernel/sys_m68k.c	2009-01-21 00:27:37.000000000 -0700
@@ -30,23 +30,6 @@
 #include <asm/page.h>
 #include <asm/unistd.h>
 
-/*
- * sys_pipe() is the normal C calling standard for creating
- * a pipe. It's not the way unix traditionally does this, though.
- */
-asmlinkage int sys_pipe(unsigned long __user * fildes)
-{
-	int fd[2];
-	int error;
-
-	error = do_pipe(fd);
-	if (!error) {
-		if (copy_to_user(fildes, fd, 2*sizeof(int)))
-			error = -EFAULT;
-	}
-	return error;
-}
-
 /* common code for old and new mmaps */
 static inline long do_mmap2(
 	unsigned long addr, unsigned long len,
diff -urpN linux-source-2.6.24.orig/arch/m68knommu/kernel/sys_m68k.c linux-source-2.6.24/arch/m68knommu/kernel/sys_m68k.c
--- linux-source-2.6.24.orig/arch/m68knommu/kernel/sys_m68k.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/arch/m68knommu/kernel/sys_m68k.c	2009-01-21 00:27:37.000000000 -0700
@@ -28,23 +28,6 @@
 #include <asm/cacheflush.h>
 #include <asm/unistd.h>
 
-/*
- * sys_pipe() is the normal C calling standard for creating
- * a pipe. It's not the way unix traditionally does this, though.
- */
-asmlinkage int sys_pipe(unsigned long * fildes)
-{
-	int fd[2];
-	int error;
-
-	error = do_pipe(fd);
-	if (!error) {
-		if (copy_to_user(fildes, fd, 2*sizeof(int)))
-			error = -EFAULT;
-	}
-	return error;
-}
-
 /* common code for old and new mmaps */
 static inline long do_mmap2(
 	unsigned long addr, unsigned long len,
diff -urpN linux-source-2.6.24.orig/arch/parisc/kernel/sys_parisc.c linux-source-2.6.24/arch/parisc/kernel/sys_parisc.c
--- linux-source-2.6.24.orig/arch/parisc/kernel/sys_parisc.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/arch/parisc/kernel/sys_parisc.c	2009-01-21 00:27:49.000000000 -0700
@@ -33,19 +33,6 @@
 #include <linux/utsname.h>
 #include <linux/personality.h>
 
-int sys_pipe(int __user *fildes)
-{
-	int fd[2];
-	int error;
-
-	error = do_pipe(fd);
-	if (!error) {
-		if (copy_to_user(fildes, fd, 2*sizeof(int)))
-			error = -EFAULT;
-	}
-	return error;
-}
-
 static unsigned long get_unshared_area(unsigned long addr, unsigned long len)
 {
 	struct vm_area_struct *vma;
diff -urpN linux-source-2.6.24.orig/arch/powerpc/kernel/syscalls.c linux-source-2.6.24/arch/powerpc/kernel/syscalls.c
--- linux-source-2.6.24.orig/arch/powerpc/kernel/syscalls.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/arch/powerpc/kernel/syscalls.c	2009-01-21 00:27:49.000000000 -0700
@@ -137,23 +137,6 @@ int sys_ipc(uint call, int first, unsign
 	return ret;
 }
 
-/*
- * sys_pipe() is the normal C calling standard for creating
- * a pipe. It's not the way unix traditionally does this, though.
- */
-int sys_pipe(int __user *fildes)
-{
-	int fd[2];
-	int error;
-
-	error = do_pipe(fd);
-	if (!error) {
-		if (copy_to_user(fildes, fd, 2*sizeof(int)))
-			error = -EFAULT;
-	}
-	return error;
-}
-
 static inline unsigned long do_mmap2(unsigned long addr, size_t len,
 			unsigned long prot, unsigned long flags,
 			unsigned long fd, unsigned long off, int shift)
diff -urpN linux-source-2.6.24.orig/arch/s390/kernel/sys_s390.c linux-source-2.6.24/arch/s390/kernel/sys_s390.c
--- linux-source-2.6.24.orig/arch/s390/kernel/sys_s390.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/arch/s390/kernel/sys_s390.c	2009-01-21 00:27:49.000000000 -0700
@@ -32,23 +32,6 @@
 
 #include <asm/uaccess.h>
 
-/*
- * sys_pipe() is the normal C calling standard for creating
- * a pipe. It's not the way Unix traditionally does this, though.
- */
-asmlinkage long sys_pipe(unsigned long __user *fildes)
-{
-	int fd[2];
-	int error;
-
-	error = do_pipe(fd);
-	if (!error) {
-		if (copy_to_user(fildes, fd, 2*sizeof(int)))
-			error = -EFAULT;
-	}
-	return error;
-}
-
 /* common code for old and new mmaps */
 static inline long do_mmap2(
 	unsigned long addr, unsigned long len,
diff -urpN linux-source-2.6.24.orig/arch/um/kernel/syscall.c linux-source-2.6.24/arch/um/kernel/syscall.c
--- linux-source-2.6.24.orig/arch/um/kernel/syscall.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/arch/um/kernel/syscall.c	2009-01-21 00:27:52.000000000 -0700
@@ -76,23 +76,6 @@ long old_mmap(unsigned long addr, unsign
  out:
 	return err;
 }
-/*
- * sys_pipe() is the normal C calling standard for creating
- * a pipe. It's not the way unix traditionally does this, though.
- */
-long sys_pipe(unsigned long __user * fildes)
-{
-	int fd[2];
-	long error;
-
-	error = do_pipe(fd);
-	if (!error) {
-		if (copy_to_user(fildes, fd, sizeof(fd)))
-			error = -EFAULT;
-	}
-	return error;
-}
-
 
 long sys_uname(struct old_utsname __user * name)
 {
diff -urpN linux-source-2.6.24.orig/arch/v850/kernel/syscalls.c linux-source-2.6.24/arch/v850/kernel/syscalls.c
--- linux-source-2.6.24.orig/arch/v850/kernel/syscalls.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/arch/v850/kernel/syscalls.c	2009-01-21 00:27:52.000000000 -0700
@@ -133,23 +133,6 @@ sys_ipc (uint call, int first, int secon
 	return ret;
 }
 
-/*
- * sys_pipe() is the normal C calling standard for creating
- * a pipe. It's not the way unix traditionally does this, though.
- */
-int sys_pipe (int *fildes)
-{
-	int fd[2];
-	int error;
-
-	error = do_pipe (fd);
-	if (!error) {
-		if (copy_to_user (fildes, fd, 2*sizeof (int)))
-			error = -EFAULT;
-	}
-	return error;
-}
-
 static inline unsigned long
 do_mmap2 (unsigned long addr, size_t len,
 	 unsigned long prot, unsigned long flags,
diff -urpN linux-source-2.6.24.orig/arch/x86/kernel/sys_i386_32.c linux-source-2.6.24/arch/x86/kernel/sys_i386_32.c
--- linux-source-2.6.24.orig/arch/x86/kernel/sys_i386_32.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/arch/x86/kernel/sys_i386_32.c	2009-01-21 00:27:52.000000000 -0700
@@ -22,23 +22,6 @@
 #include <asm/uaccess.h>
 #include <asm/unistd.h>
 
-/*
- * sys_pipe() is the normal C calling standard for creating
- * a pipe. It's not the way Unix traditionally does this, though.
- */
-asmlinkage int sys_pipe(unsigned long __user * fildes)
-{
-	int fd[2];
-	int error;
-
-	error = do_pipe(fd);
-	if (!error) {
-		if (copy_to_user(fildes, fd, 2*sizeof(int)))
-			error = -EFAULT;
-	}
-	return error;
-}
-
 asmlinkage long sys_mmap2(unsigned long addr, unsigned long len,
 			  unsigned long prot, unsigned long flags,
 			  unsigned long fd, unsigned long pgoff)
diff -urpN linux-source-2.6.24.orig/arch/x86/kernel/sys_x86_64.c linux-source-2.6.24/arch/x86/kernel/sys_x86_64.c
--- linux-source-2.6.24.orig/arch/x86/kernel/sys_x86_64.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/arch/x86/kernel/sys_x86_64.c	2009-01-21 00:27:52.000000000 -0700
@@ -16,23 +16,6 @@
 #include <asm/uaccess.h>
 #include <asm/ia32.h>
 
-/*
- * sys_pipe() is the normal C calling standard for creating
- * a pipe. It's not the way Unix traditionally does this, though.
- */
-asmlinkage long sys_pipe(int __user *fildes)
-{
-	int fd[2];
-	int error;
-
-	error = do_pipe(fd);
-	if (!error) {
-		if (copy_to_user(fildes, fd, 2*sizeof(int)))
-			error = -EFAULT;
-	}
-	return error;
-}
-
 asmlinkage long sys_mmap(unsigned long addr, unsigned long len, unsigned long prot, unsigned long flags,
 	unsigned long fd, unsigned long off)
 {
diff -urpN linux-source-2.6.24.orig/fs/pipe.c linux-source-2.6.24/fs/pipe.c
--- linux-source-2.6.24.orig/fs/pipe.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/fs/pipe.c	2009-01-21 00:27:52.000000000 -0700
@@ -1076,6 +1076,23 @@ int do_pipe(int *fd)
 }
 
 /*
+ * sys_pipe() is the normal C calling standard for creating
+ * a pipe. It's not the way Unix traditionally does this, though.
+ */
+asmlinkage long __weak sys_pipe(int __user *fildes)
+{
+	int fd[2];
+	int error;
+
+	error = do_pipe(fd);
+	if (!error) {
+		if (copy_to_user(fildes, fd, sizeof(fd)))
+			error = -EFAULT;
+	}
+	return error;
+}
+
+/*
  * pipefs should _never_ be mounted by userland - too much of security hassle,
  * no real gain from having the whole whorehouse mounted. So we don't need
  * any operations on the root directory. However, we need a non-trivial
diff -urpN linux-source-2.6.24.orig/include/asm-powerpc/syscalls.h linux-source-2.6.24/include/asm-powerpc/syscalls.h
--- linux-source-2.6.24.orig/include/asm-powerpc/syscalls.h	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/include/asm-powerpc/syscalls.h	2009-01-21 00:27:52.000000000 -0700
@@ -30,7 +30,7 @@ asmlinkage int sys_fork(unsigned long p1
 asmlinkage int sys_vfork(unsigned long p1, unsigned long p2,
 		unsigned long p3, unsigned long p4, unsigned long p5,
 		unsigned long p6, struct pt_regs *regs);
-asmlinkage int sys_pipe(int __user *fildes);
+asmlinkage long sys_pipe(int __user *fildes);
 asmlinkage long sys_rt_sigaction(int sig,
 		const struct sigaction __user *act,
 		struct sigaction __user *oact, size_t sigsetsize);
