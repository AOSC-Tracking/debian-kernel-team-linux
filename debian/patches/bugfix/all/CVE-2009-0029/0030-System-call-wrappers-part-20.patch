From 3cdad42884bbd95d5aa01297e8236ea1bad70053 Mon Sep 17 00:00:00 2001
From: Heiko Carstens <heiko.carstens@de.ibm.com>
Date: Wed, 14 Jan 2009 14:14:22 +0100
Subject: [PATCH 30/44] [CVE-2009-0029] System call wrappers part 20

From: Heiko Carstens <heiko.carstens@de.ibm.com>

commit 3cdad42884bbd95d5aa01297e8236ea1bad70053 upstream.

Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

Adjusted to apply to Debian's 2.6.26 by dann frazier <dannf@debian.org>

diff -urpN linux-source-2.6.26.orig/fs/dcache.c linux-source-2.6.26/fs/dcache.c
--- linux-source-2.6.26.orig/fs/dcache.c	2008-07-13 15:51:29.000000000 -0600
+++ linux-source-2.6.26/fs/dcache.c	2009-01-19 12:33:56.000000000 -0700
@@ -1956,7 +1956,7 @@ Elong:
  *		return NULL;
  *	}
  */
-asmlinkage long sys_getcwd(char __user *buf, unsigned long size)
+SYSCALL_DEFINE2(getcwd, char __user *, buf, unsigned long, size)
 {
 	int error;
 	struct path pwd, root;
diff -urpN linux-source-2.6.26.orig/fs/namei.c linux-source-2.6.26/fs/namei.c
--- linux-source-2.6.26.orig/fs/namei.c	2009-01-19 12:26:42.000000000 -0700
+++ linux-source-2.6.26/fs/namei.c	2009-01-19 12:33:56.000000000 -0700
@@ -2203,7 +2203,7 @@ out_err:
 	return error;
 }
 
-asmlinkage long sys_mkdir(const char __user *pathname, int mode)
+SYSCALL_DEFINE2(mkdir, const char __user *, pathname, int, mode)
 {
 	return sys_mkdirat(AT_FDCWD, pathname, mode);
 }
@@ -2315,7 +2315,7 @@ exit:
 	return error;
 }
 
-asmlinkage long sys_rmdir(const char __user *pathname)
+SYSCALL_DEFINE1(rmdir, const char __user *, pathname)
 {
 	return do_rmdir(AT_FDCWD, pathname);
 }
diff -urpN linux-source-2.6.26.orig/fs/open.c linux-source-2.6.26/fs/open.c
--- linux-source-2.6.26.orig/fs/open.c	2009-01-19 12:31:38.000000000 -0700
+++ linux-source-2.6.26/fs/open.c	2009-01-19 12:33:56.000000000 -0700
@@ -514,7 +514,7 @@ SYSCALL_DEFINE2(access, const char __use
 	return sys_faccessat(AT_FDCWD, filename, mode);
 }
 
-asmlinkage long sys_chdir(const char __user * filename)
+SYSCALL_DEFINE1(chdir, const char __user *, filename)
 {
 	struct nameidata nd;
 	int error;
@@ -536,7 +536,7 @@ out:
 	return error;
 }
 
-asmlinkage long sys_fchdir(unsigned int fd)
+SYSCALL_DEFINE1(fchdir, unsigned int, fd)
 {
 	struct file *file;
 	struct inode *inode;
diff -urpN linux-source-2.6.26.orig/fs/quota.c linux-source-2.6.26/fs/quota.c
--- linux-source-2.6.26.orig/fs/quota.c	2008-07-13 15:51:29.000000000 -0600
+++ linux-source-2.6.26/fs/quota.c	2009-01-19 12:33:56.000000000 -0700
@@ -362,7 +362,8 @@ static inline struct super_block *quotac
  * calls. Maybe we need to add the process quotas etc. in the future,
  * but we probably should use rlimits for that.
  */
-asmlinkage long sys_quotactl(unsigned int cmd, const char __user *special, qid_t id, void __user *addr)
+SYSCALL_DEFINE4(quotactl, unsigned int, cmd, const char __user *, special,
+		qid_t, id, void __user *, addr)
 {
 	uint cmds, type;
 	struct super_block *sb = NULL;
diff -urpN linux-source-2.6.26.orig/fs/read_write.c linux-source-2.6.26/fs/read_write.c
--- linux-source-2.6.26.orig/fs/read_write.c	2009-01-19 12:32:59.000000000 -0700
+++ linux-source-2.6.26/fs/read_write.c	2009-01-19 12:33:56.000000000 -0700
@@ -350,7 +350,7 @@ static inline void file_pos_write(struct
 	file->f_pos = pos;
 }
 
-asmlinkage long sys_read(unsigned int fd, char __user * buf, size_t count)
+SYSCALL_DEFINE3(read, unsigned int, fd, char __user *, buf, size_t, count)
 {
 	struct file *file;
 	ssize_t ret = -EBADF;
@@ -367,7 +367,8 @@ asmlinkage long sys_read(unsigned int fd
 	return ret;
 }
 
-asmlinkage long sys_write(unsigned int fd, const char __user * buf, size_t count)
+SYSCALL_DEFINE3(write, unsigned int, fd, const char __user *, buf,
+		size_t, count)
 {
 	struct file *file;
 	ssize_t ret = -EBADF;
@@ -669,8 +670,8 @@ ssize_t vfs_writev(struct file *file, co
 
 EXPORT_SYMBOL(vfs_writev);
 
-asmlinkage long
-sys_readv(unsigned long fd, const struct iovec __user *vec, unsigned long vlen)
+SYSCALL_DEFINE3(readv, unsigned long, fd, const struct iovec __user *, vec,
+		unsigned long, vlen)
 {
 	struct file *file;
 	ssize_t ret = -EBADF;
@@ -690,8 +691,8 @@ sys_readv(unsigned long fd, const struct
 	return ret;
 }
 
-asmlinkage long
-sys_writev(unsigned long fd, const struct iovec __user *vec, unsigned long vlen)
+SYSCALL_DEFINE3(writev, unsigned long, fd, const struct iovec __user *, vec,
+		unsigned long, vlen)
 {
 	struct file *file;
 	ssize_t ret = -EBADF;
