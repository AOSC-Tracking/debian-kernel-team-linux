From 1e7bfb2134dfec37ce04fb3a4ca89299e892d10c Mon Sep 17 00:00:00 2001
From: Heiko Carstens <heiko.carstens@de.ibm.com>
Date: Wed, 14 Jan 2009 14:14:29 +0100
Subject: [PATCH 37/44] [CVE-2009-0029] System call wrappers part 27

From: Heiko Carstens <heiko.carstens@de.ibm.com>

commit 1e7bfb2134dfec37ce04fb3a4ca89299e892d10c upstream.

Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

Adjusted to apply to Debian's 2.6.24 by dann frazier <dannf@debian.org>

diff -urpN linux-source-2.6.24.orig/fs/exec.c linux-source-2.6.24/fs/exec.c
--- linux-source-2.6.24.orig/fs/exec.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/fs/exec.c	2009-01-21 01:18:48.000000000 -0700
@@ -101,7 +101,7 @@ static inline void put_binfmt(struct lin
  *
  * Also note that we take the address to load from from the file itself.
  */
-asmlinkage long sys_uselib(const char __user * library)
+SYSCALL_DEFINE1(uselib, const char __user *, library)
 {
 	struct file * file;
 	struct nameidata nd;
diff -urpN linux-source-2.6.24.orig/fs/filesystems.c linux-source-2.6.24/fs/filesystems.c
--- linux-source-2.6.24.orig/fs/filesystems.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/fs/filesystems.c	2009-01-21 01:18:48.000000000 -0700
@@ -177,7 +177,7 @@ static int fs_maxindex(void)
 /*
  * Whee.. Weird sysv syscall. 
  */
-asmlinkage long sys_sysfs(int option, unsigned long arg1, unsigned long arg2)
+SYSCALL_DEFINE3(sysfs, int, option, unsigned long, arg1, unsigned long, arg2)
 {
 	int retval = -EINVAL;
 
diff -urpN linux-source-2.6.24.orig/fs/nfsctl.c linux-source-2.6.24/fs/nfsctl.c
--- linux-source-2.6.24.orig/fs/nfsctl.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/fs/nfsctl.c	2009-01-21 01:18:48.000000000 -0700
@@ -82,8 +82,8 @@ static struct {
 	},
 };
 
-long
-asmlinkage sys_nfsservctl(int cmd, struct nfsctl_arg __user *arg, void __user *res)
+SYSCALL_DEFINE3(nfsservctl, int, cmd, struct nfsctl_arg __user *, arg,
+		void __user *, res)
 {
 	struct file *file;
 	void __user *p = &arg->u;
diff -urpN linux-source-2.6.24.orig/kernel/printk.c linux-source-2.6.24/kernel/printk.c
--- linux-source-2.6.24.orig/kernel/printk.c	2009-01-21 00:42:57.000000000 -0700
+++ linux-source-2.6.24/kernel/printk.c	2009-01-21 01:18:48.000000000 -0700
@@ -421,7 +421,7 @@ out:
 	return error;
 }
 
-asmlinkage long sys_syslog(int type, char __user *buf, int len)
+SYSCALL_DEFINE3(syslog, int, type, char __user *, buf, int, len)
 {
 	return do_syslog(type, buf, len);
 }
diff -urpN linux-source-2.6.24.orig/kernel/ptrace.c linux-source-2.6.24/kernel/ptrace.c
--- linux-source-2.6.24.orig/kernel/ptrace.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/kernel/ptrace.c	2009-01-21 01:19:33.000000000 -0700
@@ -459,7 +459,7 @@ struct task_struct *ptrace_get_task_stru
 #endif
 
 #ifndef __ARCH_SYS_PTRACE
-asmlinkage long sys_ptrace(long request, long pid, long addr, long data)
+SYSCALL_DEFINE4(ptrace, long, request, long, pid, long, addr, long, data)
 {
 	struct task_struct *child;
 	long ret;
diff -urpN linux-source-2.6.24.orig/kernel/sysctl.c linux-source-2.6.24/kernel/sysctl.c
--- linux-source-2.6.24.orig/kernel/sysctl.c	2008-10-10 00:11:28.000000000 -0600
+++ linux-source-2.6.24/kernel/sysctl.c	2009-01-21 01:18:48.000000000 -0700
@@ -1354,7 +1354,7 @@ int do_sysctl(int __user *name, int nlen
 	return error;
 }
 
-asmlinkage long sys_sysctl(struct __sysctl_args __user *args)
+SYSCALL_DEFINE1(sysctl, struct __sysctl_args __user *, args)
 {
 	struct __sysctl_args tmp;
 	int error;
@@ -2564,7 +2564,7 @@ int sysctl_ms_jiffies(struct ctl_table *
 #else /* CONFIG_SYSCTL_SYSCALL */
 
 
-asmlinkage long sys_sysctl(struct __sysctl_args __user *args)
+SYSCALL_DEFINE1(sysctl, struct __sysctl_args __user *, args)
 {
 	struct __sysctl_args tmp;
 	int error;
diff -urpN linux-source-2.6.24.orig/kernel/timer.c linux-source-2.6.24/kernel/timer.c
--- linux-source-2.6.24.orig/kernel/timer.c	2009-01-21 00:55:17.000000000 -0700
+++ linux-source-2.6.24/kernel/timer.c	2009-01-21 01:18:48.000000000 -0700
@@ -1208,7 +1208,7 @@ out:
 	return 0;
 }
 
-asmlinkage long sys_sysinfo(struct sysinfo __user *info)
+SYSCALL_DEFINE1(sysinfo, struct sysinfo __user *, info)
 {
 	struct sysinfo val;
 
diff -urpN linux-source-2.6.24.orig/security/keys/keyctl.c linux-source-2.6.24/security/keys/keyctl.c
--- linux-source-2.6.24.orig/security/keys/keyctl.c	2008-01-24 15:58:37.000000000 -0700
+++ linux-source-2.6.24/security/keys/keyctl.c	2009-01-21 01:18:48.000000000 -0700
@@ -52,11 +52,11 @@ static int key_get_type_from_user(char *
  * - returns the new key's serial number
  * - implements add_key()
  */
-asmlinkage long sys_add_key(const char __user *_type,
-			    const char __user *_description,
-			    const void __user *_payload,
-			    size_t plen,
-			    key_serial_t ringid)
+SYSCALL_DEFINE5(add_key, const char __user *, _type,
+		const char __user *, _description,
+		const void __user *, _payload,
+		size_t, plen,
+		key_serial_t, ringid)
 {
 	key_ref_t keyring_ref, key_ref;
 	char type[32], *description;
@@ -132,10 +132,10 @@ asmlinkage long sys_add_key(const char _
  *   - if the _callout_info string is empty, it will be rendered as "-"
  * - implements request_key()
  */
-asmlinkage long sys_request_key(const char __user *_type,
-				const char __user *_description,
-				const char __user *_callout_info,
-				key_serial_t destringid)
+SYSCALL_DEFINE4(request_key, const char __user *, _type,
+		const char __user *, _description,
+		const char __user *, _callout_info,
+		key_serial_t, destringid)
 {
 	struct key_type *ktype;
 	struct key *key;
