From 64fd1de3d821659ac0a3004fd5ee1de59e64af30 Mon Sep 17 00:00:00 2001
From: Heiko Carstens <heiko.carstens@de.ibm.com>
Date: Wed, 14 Jan 2009 14:14:14 +0100
Subject: [PATCH 22/44] [CVE-2009-0029] System call wrappers part 12

From: Heiko Carstens <heiko.carstens@de.ibm.com>

commit 64fd1de3d821659ac0a3004fd5ee1de59e64af30 upstream.

Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

Backported to Debian's 2.6.24 by dann frazier <dannf@debian.org>

diff -urpN linux-source-2.6.24.orig/fs/xattr.c linux-source-2.6.24/fs/xattr.c
--- linux-source-2.6.24.orig/fs/xattr.c	2009-01-21 00:11:43.000000000 -0700
+++ linux-source-2.6.24/fs/xattr.c	2009-01-21 01:08:29.000000000 -0700
@@ -225,9 +225,9 @@ setxattr(struct dentry *d, char __user *
 	return error;
 }
 
-asmlinkage long
-sys_setxattr(char __user *path, char __user *name, void __user *value,
-	     size_t size, int flags)
+SYSCALL_DEFINE5(setxattr, char __user *, path,
+		char __user *, name, void __user *, value,
+		size_t, size, int, flags)
 {
 	struct nameidata nd;
 	int error;
@@ -240,9 +240,9 @@ sys_setxattr(char __user *path, char __u
 	return error;
 }
 
-asmlinkage long
-sys_lsetxattr(char __user *path, char __user *name, void __user *value,
-	      size_t size, int flags)
+SYSCALL_DEFINE5(lsetxattr, char __user *, path,
+		char __user *, name, void __user *, value,
+		size_t, size, int, flags)
 {
 	struct nameidata nd;
 	int error;
@@ -255,9 +255,8 @@ sys_lsetxattr(char __user *path, char __
 	return error;
 }
 
-asmlinkage long
-sys_fsetxattr(int fd, char __user *name, void __user *value,
-	      size_t size, int flags)
+SYSCALL_DEFINE5(fsetxattr, int, fd, char __user *, name,
+		void __user *,value, size_t, size, int, flags)
 {
 	struct file *f;
 	struct dentry *dentry;
@@ -310,9 +309,8 @@ getxattr(struct dentry *d, char __user *
 	return error;
 }
 
-asmlinkage long
-sys_getxattr(char __user *path, char __user *name, void __user *value,
-	     size_t size)
+SYSCALL_DEFINE4(getxattr, char __user *, path,
+		char __user *, name, void __user *, value, size_t, size)
 {
 	struct nameidata nd;
 	ssize_t error;
@@ -325,9 +323,8 @@ sys_getxattr(char __user *path, char __u
 	return error;
 }
 
-asmlinkage long
-sys_lgetxattr(char __user *path, char __user *name, void __user *value,
-	      size_t size)
+SYSCALL_DEFINE4(lgetxattr, char __user *, path,
+		char __user *, name, void __user *, value, size_t, size)
 {
 	struct nameidata nd;
 	ssize_t error;
@@ -340,8 +337,8 @@ sys_lgetxattr(char __user *path, char __
 	return error;
 }
 
-asmlinkage long
-sys_fgetxattr(int fd, char __user *name, void __user *value, size_t size)
+SYSCALL_DEFINE4(fgetxattr, int, fd, char __user *, name,
+		void __user *, value, size_t, size)
 {
 	struct file *f;
 	ssize_t error = -EBADF;
@@ -385,8 +382,8 @@ listxattr(struct dentry *d, char __user 
 	return error;
 }
 
-asmlinkage long
-sys_listxattr(char __user *path, char __user *list, size_t size)
+SYSCALL_DEFINE3(listxattr, char __user *, path, char __user *, list,
+		size_t, size)
 {
 	struct nameidata nd;
 	ssize_t error;
@@ -399,8 +396,8 @@ sys_listxattr(char __user *path, char __
 	return error;
 }
 
-asmlinkage long
-sys_llistxattr(char __user *path, char __user *list, size_t size)
+SYSCALL_DEFINE3(llistxattr, char __user *, path, char __user *, list,
+		size_t, size)
 {
 	struct nameidata nd;
 	ssize_t error;
@@ -413,8 +410,7 @@ sys_llistxattr(char __user *path, char _
 	return error;
 }
 
-asmlinkage long
-sys_flistxattr(int fd, char __user *list, size_t size)
+SYSCALL_DEFINE3(flistxattr, int, fd, char __user *, list, size_t, size)
 {
 	struct file *f;
 	ssize_t error = -EBADF;
@@ -446,8 +442,8 @@ removexattr(struct dentry *d, char __use
 	return vfs_removexattr(d, kname);
 }
 
-asmlinkage long
-sys_removexattr(char __user *path, char __user *name)
+SYSCALL_DEFINE2(removexattr, char __user *, path,
+		char __user *, name)
 {
 	struct nameidata nd;
 	int error;
