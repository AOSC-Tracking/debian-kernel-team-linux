From 64fd1de3d821659ac0a3004fd5ee1de59e64af30 Mon Sep 17 00:00:00 2001
From: Heiko Carstens <heiko.carstens@de.ibm.com>
Date: Wed, 14 Jan 2009 14:14:14 +0100
Subject: [PATCH 22/44] [CVE-2009-0029] System call wrappers part 12

From: Heiko Carstens <heiko.carstens@de.ibm.com>

commit 64fd1de3d821659ac0a3004fd5ee1de59e64af30 upstream.

Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

Backported to Debian's 2.6.18 by dann frazier <dannf@debian.org>

diff -urpN linux-source-2.6.18.orig/fs/xattr.c linux-source-2.6.18/fs/xattr.c
--- linux-source-2.6.18.orig/fs/xattr.c	2009-01-25 21:05:36.000000000 -0700
+++ linux-source-2.6.18/fs/xattr.c	2009-01-25 22:49:28.000000000 -0700
@@ -200,9 +200,9 @@ setxattr(struct dentry *d, char __user *
 	return error;
 }
 
-asmlinkage long
-sys_setxattr(char __user *path, char __user *name, void __user *value,
-	     size_t size, int flags)
+SYSCALL_DEFINE5(setxattr, char __user *, path,
+		char __user *, name, void __user *, value,
+		size_t, size, int, flags)
 {
 	struct nameidata nd;
 	int error;
@@ -215,9 +215,9 @@ sys_setxattr(char __user *path, char __u
 	return error;
 }
 
-asmlinkage long
-sys_lsetxattr(char __user *path, char __user *name, void __user *value,
-	      size_t size, int flags)
+SYSCALL_DEFINE5(lsetxattr, char __user *, path,
+		char __user *, name, void __user *, value,
+		size_t, size, int, flags)
 {
 	struct nameidata nd;
 	int error;
@@ -230,9 +230,8 @@ sys_lsetxattr(char __user *path, char __
 	return error;
 }
 
-asmlinkage long
-sys_fsetxattr(int fd, char __user *name, void __user *value,
-	      size_t size, int flags)
+SYSCALL_DEFINE5(fsetxattr, int, fd, char __user *, name,
+		void __user *,value, size_t, size, int, flags)
 {
 	struct file *f;
 	struct dentry *dentry;
@@ -285,9 +284,8 @@ getxattr(struct dentry *d, char __user *
 	return error;
 }
 
-asmlinkage long
-sys_getxattr(char __user *path, char __user *name, void __user *value,
-	     size_t size)
+SYSCALL_DEFINE4(getxattr, char __user *, path,
+		char __user *, name, void __user *, value, size_t, size)
 {
 	struct nameidata nd;
 	ssize_t error;
@@ -300,9 +298,8 @@ sys_getxattr(char __user *path, char __u
 	return error;
 }
 
-asmlinkage long
-sys_lgetxattr(char __user *path, char __user *name, void __user *value,
-	      size_t size)
+SYSCALL_DEFINE4(lgetxattr, char __user *, path,
+		char __user *, name, void __user *, value, size_t, size)
 {
 	struct nameidata nd;
 	ssize_t error;
@@ -315,8 +312,8 @@ sys_lgetxattr(char __user *path, char __
 	return error;
 }
 
-asmlinkage long
-sys_fgetxattr(int fd, char __user *name, void __user *value, size_t size)
+SYSCALL_DEFINE4(fgetxattr, int, fd, char __user *, name,
+		void __user *, value, size_t, size)
 {
 	struct file *f;
 	ssize_t error = -EBADF;
@@ -370,8 +367,8 @@ out:
 	return error;
 }
 
-asmlinkage long
-sys_listxattr(char __user *path, char __user *list, size_t size)
+SYSCALL_DEFINE3(listxattr, char __user *, path, char __user *, list,
+		size_t, size)
 {
 	struct nameidata nd;
 	ssize_t error;
@@ -384,8 +381,8 @@ sys_listxattr(char __user *path, char __
 	return error;
 }
 
-asmlinkage long
-sys_llistxattr(char __user *path, char __user *list, size_t size)
+SYSCALL_DEFINE3(llistxattr, char __user *, path, char __user *, list,
+		size_t, size)
 {
 	struct nameidata nd;
 	ssize_t error;
@@ -398,8 +395,7 @@ sys_llistxattr(char __user *path, char _
 	return error;
 }
 
-asmlinkage long
-sys_flistxattr(int fd, char __user *list, size_t size)
+SYSCALL_DEFINE3(flistxattr, int, fd, char __user *, list, size_t, size)
 {
 	struct file *f;
 	ssize_t error = -EBADF;
@@ -430,8 +426,8 @@ removexattr(struct dentry *d, char __use
 	return vfs_removexattr(d, kname);
 }
 
-asmlinkage long
-sys_removexattr(char __user *path, char __user *name)
+SYSCALL_DEFINE2(removexattr, char __user *, path,
+		char __user *, name)
 {
 	struct nameidata nd;
 	int error;
