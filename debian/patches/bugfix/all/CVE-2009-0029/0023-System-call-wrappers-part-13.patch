From 6a6160a7b5c27b3c38651baef92a14fa7072b3c1 Mon Sep 17 00:00:00 2001
From: Heiko Carstens <heiko.carstens@de.ibm.com>
Date: Wed, 14 Jan 2009 14:14:15 +0100
Subject: [PATCH 23/44] [CVE-2009-0029] System call wrappers part 13

From: Heiko Carstens <heiko.carstens@de.ibm.com>

commit 6a6160a7b5c27b3c38651baef92a14fa7072b3c1 upstream.

Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

Backported to Debian's 2.6.26 by dann frazier <dannf@debian.org>

diff -urpN linux-source-2.6.26.orig/fs/xattr.c linux-source-2.6.26/fs/xattr.c
--- linux-source-2.6.26.orig/fs/xattr.c	2009-01-19 12:22:58.000000000 -0700
+++ linux-source-2.6.26/fs/xattr.c	2009-01-19 12:24:41.000000000 -0700
@@ -499,8 +499,8 @@ SYSCALL_DEFINE2(removexattr, const char 
 	return error;
 }
 
-asmlinkage long
-sys_lremovexattr(const char __user *path, const char __user *name)
+SYSCALL_DEFINE2(lremovexattr, const char __user *, path,
+		const char __user *, name)
 {
 	struct nameidata nd;
 	int error;
@@ -517,8 +517,7 @@ sys_lremovexattr(const char __user *path
 	return error;
 }
 
-asmlinkage long
-sys_fremovexattr(int fd, const char __user *name)
+SYSCALL_DEFINE2(fremovexattr, int, fd, const char __user *, name)
 {
 	struct file *f;
 	struct dentry *dentry;
diff -urpN linux-source-2.6.26.orig/mm/fremap.c linux-source-2.6.26/mm/fremap.c
--- linux-source-2.6.26.orig/mm/fremap.c	2008-07-13 15:51:29.000000000 -0600
+++ linux-source-2.6.26/mm/fremap.c	2009-01-19 12:24:06.000000000 -0700
@@ -117,8 +117,8 @@ static int populate_range(struct mm_stru
  * and the vma's default protection is used. Arbitrary protections
  * might be implemented in the future.
  */
-asmlinkage long sys_remap_file_pages(unsigned long start, unsigned long size,
-	unsigned long prot, unsigned long pgoff, unsigned long flags)
+SYSCALL_DEFINE5(remap_file_pages, unsigned long, start, unsigned long, size,
+		unsigned long, prot, unsigned long, pgoff, unsigned long, flags)
 {
 	struct mm_struct *mm = current->mm;
 	struct address_space *mapping;
diff -urpN linux-source-2.6.26.orig/mm/mlock.c linux-source-2.6.26/mm/mlock.c
--- linux-source-2.6.26.orig/mm/mlock.c	2009-01-10 05:42:11.000000000 -0700
+++ linux-source-2.6.26/mm/mlock.c	2009-01-19 12:24:06.000000000 -0700
@@ -130,7 +130,7 @@ static int do_mlock(unsigned long start,
 	return error;
 }
 
-asmlinkage long sys_mlock(unsigned long start, size_t len)
+SYSCALL_DEFINE2(mlock, unsigned long, start, size_t, len)
 {
 	unsigned long locked;
 	unsigned long lock_limit;
@@ -156,7 +156,7 @@ asmlinkage long sys_mlock(unsigned long 
 	return error;
 }
 
-asmlinkage long sys_munlock(unsigned long start, size_t len)
+SYSCALL_DEFINE2(munlock, unsigned long, start, size_t, len)
 {
 	int ret;
 
diff -urpN linux-source-2.6.26.orig/mm/mmap.c linux-source-2.6.26/mm/mmap.c
--- linux-source-2.6.26.orig/mm/mmap.c	2009-01-19 11:12:44.000000000 -0700
+++ linux-source-2.6.26/mm/mmap.c	2009-01-19 12:24:06.000000000 -0700
@@ -240,7 +240,7 @@ static struct vm_area_struct *remove_vma
 	return next;
 }
 
-asmlinkage long sys_brk(unsigned long brk)
+SYSCALL_DEFINE1(brk, unsigned long, brk)
 {
 	unsigned long rlim, retval;
 	unsigned long newbrk, oldbrk;
@@ -1915,7 +1915,7 @@ int do_munmap(struct mm_struct *mm, unsi
 
 EXPORT_SYMBOL(do_munmap);
 
-asmlinkage long sys_munmap(unsigned long addr, size_t len)
+SYSCALL_DEFINE2(munmap, unsigned long, addr, size_t, len)
 {
 	int ret;
 	struct mm_struct *mm = current->mm;
diff -urpN linux-source-2.6.26.orig/mm/mprotect.c linux-source-2.6.26/mm/mprotect.c
--- linux-source-2.6.26.orig/mm/mprotect.c	2009-01-10 05:42:11.000000000 -0700
+++ linux-source-2.6.26/mm/mprotect.c	2009-01-19 12:24:06.000000000 -0700
@@ -218,8 +218,8 @@ fail:
 	return error;
 }
 
-asmlinkage long
-sys_mprotect(unsigned long start, size_t len, unsigned long prot)
+SYSCALL_DEFINE3(mprotect, unsigned long, start, size_t, len,
+		unsigned long, prot)
 {
 	unsigned long vm_flags, nstart, end, tmp, reqprot;
 	struct vm_area_struct *vma, *prev;
diff -urpN linux-source-2.6.26.orig/mm/mremap.c linux-source-2.6.26/mm/mremap.c
--- linux-source-2.6.26.orig/mm/mremap.c	2009-01-19 11:12:44.000000000 -0700
+++ linux-source-2.6.26/mm/mremap.c	2009-01-19 12:24:06.000000000 -0700
@@ -412,9 +412,9 @@ out_nc:
 	return ret;
 }
 
-asmlinkage long sys_mremap(unsigned long addr,
-	unsigned long old_len, unsigned long new_len,
-	unsigned long flags, unsigned long new_addr)
+SYSCALL_DEFINE5(mremap, unsigned long, addr, unsigned long, old_len,
+		unsigned long, new_len, unsigned long, flags,
+		unsigned long, new_addr)
 {
 	unsigned long ret;
 
diff -urpN linux-source-2.6.26.orig/mm/msync.c linux-source-2.6.26/mm/msync.c
--- linux-source-2.6.26.orig/mm/msync.c	2008-07-13 15:51:29.000000000 -0600
+++ linux-source-2.6.26/mm/msync.c	2009-01-19 12:24:06.000000000 -0700
@@ -28,7 +28,7 @@
  * So by _not_ starting I/O in MS_ASYNC we provide complete flexibility to
  * applications.
  */
-asmlinkage long sys_msync(unsigned long start, size_t len, int flags)
+SYSCALL_DEFINE3(msync, unsigned long, start, size_t, len, int, flags)
 {
 	unsigned long end;
 	struct mm_struct *mm = current->mm;
diff -urpN linux-source-2.6.26.orig/mm/nommu.c linux-source-2.6.26/mm/nommu.c
--- linux-source-2.6.26.orig/mm/nommu.c	2009-01-19 11:12:44.000000000 -0700
+++ linux-source-2.6.26/mm/nommu.c	2009-01-19 12:24:06.000000000 -0700
@@ -334,7 +334,7 @@ EXPORT_SYMBOL(vm_insert_page);
  *  to a regular file.  in this case, the unmapping will need
  *  to invoke file system routines that need the global lock.
  */
-asmlinkage long sys_brk(unsigned long brk)
+SYSCALL_DEFINE1(brk, unsigned long, brk)
 {
 	struct mm_struct *mm = current->mm;
 
@@ -1149,7 +1149,7 @@ int do_munmap(struct mm_struct *mm, unsi
 }
 EXPORT_SYMBOL(do_munmap);
 
-asmlinkage long sys_munmap(unsigned long addr, size_t len)
+SYSCALL_DEFINE2(munmap, unsigned long, addr, size_t, len)
 {
 	int ret;
 	struct mm_struct *mm = current->mm;
@@ -1240,9 +1240,9 @@ unsigned long do_mremap(unsigned long ad
 }
 EXPORT_SYMBOL(do_mremap);
 
-asmlinkage unsigned long sys_mremap(unsigned long addr,
-	unsigned long old_len, unsigned long new_len,
-	unsigned long flags, unsigned long new_addr)
+SYSCALL_DEFINE5(mremap, unsigned long, addr, unsigned long, old_len,
+		unsigned long, new_len, unsigned long, flags,
+		unsigned long, new_addr)
 {
 	unsigned long ret;
 
