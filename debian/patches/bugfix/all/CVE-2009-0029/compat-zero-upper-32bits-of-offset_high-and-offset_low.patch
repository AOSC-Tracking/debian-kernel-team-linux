commit d6c178e9694e7e0c7ffe0289cf4389a498cac735
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Sat Mar 28 01:36:09 2009 +0100

    MIPS: Compat: Zero upper 32-bit of offset_high and offset_low.
    
    Through sys_llseek() arguably should do exactly that it doesn't which
    means llseek(2) will fail for o32 processes if offset_low has bit 31 set.
    
    As suggested by Heiko Carstens.
    
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>

Adjusted to apply to Debian's 2.6.18 by dann frazier <dannf@debian.org>

diff -urpN a/arch/mips/kernel/linux32.c b/arch/mips/kernel/linux32.c
--- a/arch/mips/kernel/linux32.c	2009-04-12 17:39:36.000000000 -0600
+++ b/arch/mips/kernel/linux32.c	2009-04-12 17:53:26.000000000 -0600
@@ -342,9 +342,9 @@ sys32_settimeofday(struct compat_timeval
 	return do_sys_settimeofday(tv ? &kts : NULL, tz ? &ktz : NULL);
 }
 
-SYSCALL_DEFINE5(32_llseek, unsigned long, fd, unsigned long, offset_high,
-	unsigned long, offset_low, loff_t __user *, result,
-	unsigned long, origin)
+SYSCALL_DEFINE5(32_llseek, unsigned int, fd, unsigned int, offset_high,
+		unsigned int, offset_low, loff_t __user *, result,
+		unsigned int, origin)
 {
 	return sys_llseek(fd, offset_high, offset_low, result, origin);
 }
