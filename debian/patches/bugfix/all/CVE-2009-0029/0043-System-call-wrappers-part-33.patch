From 2b66421995d2e93c9d1a0111acf2581f8529c6e5 Mon Sep 17 00:00:00 2001
From: Heiko Carstens <heiko.carstens@de.ibm.com>
Date: Wed, 14 Jan 2009 14:14:35 +0100
Subject: [PATCH 43/44] [CVE-2009-0029] System call wrappers part 33

From: Heiko Carstens <heiko.carstens@de.ibm.com>

commit 2b66421995d2e93c9d1a0111acf2581f8529c6e5 upstream.

Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

Adjusted to apply to Debian's 2.6.24 by dann frazier <dannf@debian.org>

diff -urpN linux-source-2.6.24.orig/fs/pipe.c linux-source-2.6.24/fs/pipe.c
--- linux-source-2.6.24.orig/fs/pipe.c	2009-01-21 00:29:57.000000000 -0700
+++ linux-source-2.6.24/fs/pipe.c	2009-01-21 01:31:29.000000000 -0700
@@ -1079,7 +1079,7 @@ int do_pipe(int *fd)
  * sys_pipe() is the normal C calling standard for creating
  * a pipe. It's not the way Unix traditionally does this, though.
  */
-asmlinkage long sys_pipe(int __user *fildes)
+SYSCALL_DEFINE1(pipe, int __user *, fildes)
 {
 	int fd[2];
 	int error;
diff -urpN linux-source-2.6.24.orig/include/linux/syscalls.h linux-source-2.6.24/include/linux/syscalls.h
--- linux-source-2.6.24.orig/include/linux/syscalls.h	2009-01-21 01:25:43.000000000 -0700
+++ linux-source-2.6.24/include/linux/syscalls.h	2009-01-21 01:31:29.000000000 -0700
@@ -675,6 +675,7 @@ asmlinkage long sys_ppoll(struct pollfd 
 			  struct timespec __user *, const sigset_t __user *,
 			  size_t);
 asmlinkage long sys_pipe2(int __user *, int);
+asmlinkage long sys_pipe(int __user *);
 
 int kernel_execve(const char *filename, char *const argv[], char *const envp[]);
 
