commit 6a860c979b35469e4d77da781a96bdb2ca05ae64
Author: Jens Axboe <jens.axboe@oracle.com>
Date:   Fri Jul 20 15:18:12 2007 +0200

    splice: fix bad unlock_page() in error case
    
    If add_to_page_cache_lru() fails, the page will not be locked. But
    splice jumps to an error path that does a page release and unlock,
    causing a BUG() in unlock_page().
    
    Fix this by adding one more label that just releases the page. This bug
    was actually triggered on EL5 by gurudas pai <gurudas.pai@oracle.com>
    using fio.
    
    Signed-off-by: Jens Axboe <jens.axboe@oracle.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Backported to Debian's 2.6.18 by dann frazier <dannf@hp.com>

--- linux-source-2.6.18/fs/splice.c.orig	2008-06-16 16:25:21.000000000 -0600
+++ linux-source-2.6.18/fs/splice.c	2008-10-02 18:23:16.000000000 -0600
@@ -615,7 +615,7 @@
 			ret = add_to_page_cache_lru(page, mapping, index,
 						    gfp_mask);
 			if (unlikely(ret))
-				goto out;
+				goto out_release;
 		}
 
 		/*
@@ -696,8 +696,9 @@
 		goto find_page;
 	}
 out:
-	page_cache_release(page);
 	unlock_page(page);
+out_release:
+	page_cache_release(page);
 out_ret:
 	return ret;
 }
