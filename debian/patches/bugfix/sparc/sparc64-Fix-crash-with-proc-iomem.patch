commit 192d7a4667c6d11d1a174ec4cad9a3c5d5f9043c
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Mar 18 23:53:16 2009 -0700

    sparc64: Fix crash with /proc/iomem
    
    When you compile kernel on Sparc64 with heap memory checking and type
    "cat /proc/iomem", you get a crash, because pointers in struct
    resource are uninitialized.
    
    Most code fills struct resource with zeros, so I assume that it is
    responsibility of the caller of request_resource to initialized it,
    not the responsibility of request_resource functuion.
    
    After 2.6.29 is out, there could be a check for uninitialized fields
    added to request_resource to avoid crashes like this.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

Backported to Debian's 2.6.26 by dann frazier <dannf@debian.org>

diff -urpN linux-source-2.6.26.orig/arch/sparc64/kernel/pci_common.c linux-source-2.6.26/arch/sparc64/kernel/pci_common.c
--- linux-source-2.6.26.orig/arch/sparc64/kernel/pci_common.c	2009-05-11 12:06:56.000000000 -0600
+++ linux-source-2.6.26/arch/sparc64/kernel/pci_common.c	2009-06-09 00:05:23.000000000 -0600
@@ -368,7 +368,7 @@ static void pci_register_iommu_region(st
 	const u32 *vdma = of_get_property(pbm->prom_node, "virtual-dma", NULL);
 
 	if (vdma) {
-		struct resource *rp = kmalloc(sizeof(*rp), GFP_KERNEL);
+		struct resource *rp = kzalloc(sizeof(*rp), GFP_KERNEL);
 
 		if (!rp) {
 			prom_printf("Cannot allocate IOMMU resource.\n");
