diff -urpN a/drivers/media/radio/radio-aimslab.c b/drivers/media/radio/radio-aimslab.c
--- a/drivers/media/radio/radio-aimslab.c	2011-02-21 09:54:23.190447812 -0700
+++ b/drivers/media/radio/radio-aimslab.c	2011-02-21 09:55:45.222980990 -0700
@@ -31,6 +31,7 @@
 #include <linux/module.h>	/* Modules 			*/
 #include <linux/init.h>		/* Initdata			*/
 #include <linux/ioport.h>	/* request_region		*/
+#include <linux/delay.h>	/* udelay			*/
 #include <linux/videodev2.h>	/* kernel radio structs		*/
 #include <linux/version.h>	/* for KERNEL_VERSION MACRO	*/
 #include <linux/io.h>		/* outb, outb_p			*/
@@ -70,17 +71,27 @@ static struct rtrack rtrack_card;
 
 /* local things */
 
+static void sleep_delay(long n)
+{
+	/* Sleep nicely for 'n' uS */
+	int d = n / msecs_to_jiffies(1000);
+	if (!d)
+		udelay(n);
+	else
+		msleep(jiffies_to_msecs(d));
+}
+
 static void rt_decvol(struct rtrack *rt)
 {
 	outb(0x58, rt->io);		/* volume down + sigstr + on	*/
-	msleep(100);
+	sleep_delay(100000);
 	outb(0xd8, rt->io);		/* volume steady + sigstr + on	*/
 }
 
 static void rt_incvol(struct rtrack *rt)
 {
 	outb(0x98, rt->io);		/* volume up + sigstr + on	*/
-	msleep(100);
+	sleep_delay(100000);
 	outb(0xd8, rt->io);		/* volume steady + sigstr + on	*/
 }
 
@@ -109,7 +120,7 @@ static int rt_setvol(struct rtrack *rt,
 
 	if (vol == 0) {			/* volume = 0 means mute the card */
 		outb(0x48, rt->io);	/* volume down but still "on"	*/
-		msleep(2000);	/* make sure it's totally down	*/
+		sleep_delay(2000000);	/* make sure it's totally down	*/
 		outb(0xd0, rt->io);	/* volume steady, off		*/
 		rt->curvol = 0;		/* track the volume state!	*/
 		mutex_unlock(&rt->lock);
@@ -144,7 +155,7 @@ static void send_0_byte(struct rtrack *r
 		outb_p(128+64+16+8+  1, rt->io);  /* on + wr-enable + data low */
 		outb_p(128+64+16+8+2+1, rt->io);  /* clock */
 	}
-	msleep(1);
+	sleep_delay(1000);
 }
 
 static void send_1_byte(struct rtrack *rt)
@@ -158,7 +169,7 @@ static void send_1_byte(struct rtrack *r
 		outb_p(128+64+16+8+4+2+1, rt->io); /* clock */
 	}
 
-	msleep(1);
+	sleep_delay(1000);
 }
 
 static int rt_setfreq(struct rtrack *rt, unsigned long freq)
@@ -412,7 +423,7 @@ static int __init rtrack_init(void)
 
 	/* this ensures that the volume is all the way down  */
 	outb(0x48, rt->io);		/* volume down but still "on"	*/
-	msleep(2000);	/* make sure it's totally down	*/
+	sleep_delay(2000000);	/* make sure it's totally down	*/
 	outb(0xc0, rt->io);		/* steady volume, mute card	*/
 
 	return 0;
