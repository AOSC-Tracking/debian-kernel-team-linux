From: Ben Hutchings <ben@decadent.org.uk>
Date: Sun, 18 Feb 2018 01:46:08 +0000
Subject: ptrace: Avoid ABI change in 3.16.52
Forwarded: not-needed

Commits bfedb589252c "mm: Add a user_ns owner to mm_struct and fix
ptrace permission checks" and 64b875f7ac8a "ptrace: Capture the
ptracer's creds not PT_PTRACE_CAP" added new members to struct
mm_struct and struct task_struct.  These structures are always
allocated, and the new members used, in the core kernel.  So just move
the new members to the end of each struct and hide them from genksyms.

Also hide the added #include which changed versions for all symbols
exported from fs/exec.c

---
--- a/include/linux/mm_types.h
+++ b/include/linux/mm_types.h
@@ -421,7 +421,6 @@ struct mm_struct {
 	 */
 	struct task_struct __rcu *owner;
 #endif
-	struct user_namespace *user_ns;
 
 	/* store ref to file /proc/<pid>/exe symlink points to */
 	struct file *exe_file;
@@ -457,6 +456,9 @@ struct mm_struct {
 	atomic_t tlb_flush_pending;
 #endif
 	struct uprobes_state uprobes_state;
+#ifndef __GENKSYMS__
+	struct user_namespace *user_ns;
+#endif
 };
 
 static inline void mm_init_cpumask(struct mm_struct *mm)
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -1377,7 +1377,6 @@ struct task_struct {
 	struct list_head cpu_timers[3];
 
 /* process credentials */
-	const struct cred __rcu *ptracer_cred; /* Tracer's credentials at attach */
 	const struct cred __rcu *real_cred; /* objective and real subjective task
 					 * credentials (COW) */
 	const struct cred __rcu *cred;	/* effective (overridable) subjective task
@@ -1657,6 +1656,9 @@ struct task_struct {
 	unsigned int	sequential_io;
 	unsigned int	sequential_io_avg;
 #endif
+#ifndef __GENKSYMS__
+	const struct cred __rcu *ptracer_cred; /* Tracer's credentials at attach */
+#endif
 };
 
 /* Future-safe accessor for struct task_struct's cpus_allowed. */
--- a/fs/exec.c
+++ b/fs/exec.c
@@ -56,7 +56,9 @@
 #include <linux/pipe_fs_i.h>
 #include <linux/oom.h>
 #include <linux/compat.h>
+#ifndef __GENKSYMS__
 #include <linux/user_namespace.h>
+#endif
 
 #include <asm/uaccess.h>
 #include <asm/mmu_context.h>
