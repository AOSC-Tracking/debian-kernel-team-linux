From: Ben Hutchings <benh@debian.org>
Date: Tue, 15 Jun 2021 02:00:04 +0200
Subject: wireless: Avoid ABI change in 4.9.271
Forwarded: not-needed

Commit 56eeeb794d98 "mac80211: properly handle A-MSDUs that start with
an RFC 1042 header" added an extra parameter to
ieee80211_data_to_8023_exthdr().  To avoid an ABI change:

* Rename the function to ieee80211_data_to_8023_exthdr_new()
* Add the old function name as a wrapper around it, to support
  existing modules
* Define a macro mapping the old name to the new name, so in-tree
  drivers and freshly built out-of-tree drivers see the updated
  function

---
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -4055,9 +4055,10 @@ unsigned int ieee80211_get_mesh_hdrlen(s
  * @iftype: the virtual interface type
  * Return: 0 on success. Non-zero on error.
  */
-int ieee80211_data_to_8023_exthdr(struct sk_buff *skb, struct ethhdr *ehdr,
+int ieee80211_data_to_8023_exthdr_new(struct sk_buff *skb, struct ethhdr *ehdr,
 				  const u8 *addr, enum nl80211_iftype iftype,
 				  bool is_amsdu);
+#define ieee80211_data_to_8023_exthdr ieee80211_data_to_8023_exthdr_new
 
 /**
  * ieee80211_data_to_8023 - convert an 802.11 data frame to 802.3
--- a/net/wireless/util.c
+++ b/net/wireless/util.c
@@ -420,7 +420,7 @@ unsigned int ieee80211_get_mesh_hdrlen(s
 }
 EXPORT_SYMBOL(ieee80211_get_mesh_hdrlen);
 
-int ieee80211_data_to_8023_exthdr(struct sk_buff *skb, struct ethhdr *ehdr,
+int ieee80211_data_to_8023_exthdr_new(struct sk_buff *skb, struct ethhdr *ehdr,
 				  const u8 *addr, enum nl80211_iftype iftype,
 				  bool is_amsdu)
 {
@@ -528,7 +528,7 @@ int ieee80211_data_to_8023_exthdr(struct
 
 	return 0;
 }
-EXPORT_SYMBOL(ieee80211_data_to_8023_exthdr);
+EXPORT_SYMBOL(ieee80211_data_to_8023_exthdr_new);
 
 int ieee80211_data_from_8023(struct sk_buff *skb, const u8 *addr,
 			     enum nl80211_iftype iftype,
@@ -1843,3 +1843,12 @@ void cfg80211_send_layer2_update(struct
 	netif_rx_ni(skb);
 }
 EXPORT_SYMBOL(cfg80211_send_layer2_update);
+
+#undef ieee80211_data_to_8023_exthdr
+int ieee80211_data_to_8023_exthdr(struct sk_buff *skb, struct ethhdr *ehdr,
+				  const u8 *addr, enum nl80211_iftype iftype)
+{
+	return ieee80211_data_to_8023_exthdr_new(skb, ehdr, addr, iftype,
+						 false);
+}
+EXPORT_SYMBOL(ieee80211_data_to_8023_exthdr);
