From: Ben Hutchings <benh@debian.org>
Date: Wed, 02 Feb 2022 00:30:06 +0100
Subject: Revert "ARM: 8800/1: use choice for kernel unwinders"
Forwarded: not-needed

This reverts commit d47e16bb32239e4aecb3bb04bd9117016e4884fb, which
was commit f9b58e8c7d031b0daa5c9a9ee27f5a4028ba53ac upstream.

Our armhf configurations currently support both unwind methods, and
disabling either will result in an ABI change.

---
--- a/arch/arm/Kconfig.debug
+++ b/arch/arm/Kconfig.debug
@@ -15,42 +15,30 @@ config ARM_PTDUMP
 	  kernel.
 	  If in doubt, say "N"
 
-choice
-	prompt "Choose kernel unwinder"
-	default UNWINDER_ARM if AEABI && !FUNCTION_GRAPH_TRACER
-	default UNWINDER_FRAME_POINTER if !AEABI || FUNCTION_GRAPH_TRACER
-	help
-	  This determines which method will be used for unwinding kernel stack
-	  traces for panics, oopses, bugs, warnings, perf, /proc/<pid>/stack,
-	  livepatch, lockdep, and more.
-
-config UNWINDER_FRAME_POINTER
-	bool "Frame pointer unwinder"
-	depends on !THUMB2_KERNEL && !CC_IS_CLANG
-	select ARCH_WANT_FRAME_POINTERS
-	select FRAME_POINTER
+# RMK wants arm kernels compiled with frame pointers or stack unwinding.
+# If you know what you are doing and are willing to live without stack
+# traces, you can get a slightly smaller kernel by setting this option to
+# n, but then RMK will have to kill you ;).
+config FRAME_POINTER
+	bool
+	depends on !THUMB2_KERNEL
+	default y if !ARM_UNWIND || FUNCTION_GRAPH_TRACER
 	help
-	  This option enables the frame pointer unwinder for unwinding
-	  kernel stack traces.
+	  If you say N here, the resulting kernel will be slightly smaller and
+	  faster. However, if neither FRAME_POINTER nor ARM_UNWIND are enabled,
+	  when a problem occurs with the kernel, the information that is
+	  reported is severely limited.
 
-config UNWINDER_ARM
-	bool "ARM EABI stack unwinder"
+config ARM_UNWIND
+	bool "Enable stack unwinding support (EXPERIMENTAL)"
 	depends on AEABI
-	select ARM_UNWIND
+	default y
 	help
 	  This option enables stack unwinding support in the kernel
 	  using the information automatically generated by the
 	  compiler. The resulting kernel image is slightly bigger but
 	  the performance is not affected. Currently, this feature
-	  only works with EABI compilers.
-
-endchoice
-
-config ARM_UNWIND
-	bool
-
-config FRAME_POINTER
-	bool
+	  only works with EABI compilers. If unsure say Y.
 
 config OLD_MCOUNT
 	bool
--- a/lib/Kconfig.debug
+++ b/lib/Kconfig.debug
@@ -1092,7 +1092,7 @@ config LOCKDEP
 	bool
 	depends on DEBUG_KERNEL && TRACE_IRQFLAGS_SUPPORT && STACKTRACE_SUPPORT && LOCKDEP_SUPPORT
 	select STACKTRACE
-	select FRAME_POINTER if !MIPS && !PPC && !ARM && !S390 && !MICROBLAZE && !ARC && !SCORE
+	select FRAME_POINTER if !MIPS && !PPC && !ARM_UNWIND && !S390 && !MICROBLAZE && !ARC && !SCORE
 	select KALLSYMS
 	select KALLSYMS_ALL
 
@@ -1671,7 +1671,7 @@ config FAULT_INJECTION_STACKTRACE_FILTER
 	depends on FAULT_INJECTION_DEBUG_FS && STACKTRACE_SUPPORT
 	depends on !X86_64
 	select STACKTRACE
-	select FRAME_POINTER if !MIPS && !PPC && !S390 && !MICROBLAZE && !ARM && !ARC && !SCORE
+	select FRAME_POINTER if !MIPS && !PPC && !S390 && !MICROBLAZE && !ARM_UNWIND && !ARC && !SCORE
 	help
 	  Provide stacktrace filter for fault-injection capabilities
 
@@ -1680,7 +1680,7 @@ config LATENCYTOP
 	depends on DEBUG_KERNEL
 	depends on STACKTRACE_SUPPORT
 	depends on PROC_FS
-	select FRAME_POINTER if !MIPS && !PPC && !S390 && !MICROBLAZE && !ARM && !ARC
+	select FRAME_POINTER if !MIPS && !PPC && !S390 && !MICROBLAZE && !ARM_UNWIND && !ARC
 	select KALLSYMS
 	select KALLSYMS_ALL
 	select STACKTRACE
