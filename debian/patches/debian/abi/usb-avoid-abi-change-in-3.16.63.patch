From: Ben Hutchings <ben@decadent.org.uk>
Date: Mon, 11 Feb 2019 19:30:35 +0000
Subject: USB: Avoid ABI change in 3.16.63
Forwarded: not-needed

Commit f8860a91d753 "USB: check usb_get_extra_descriptor for proper
size" added a parameter (min) to __usb_get_extra_descriptor().
Restore the old function signature and define a separate function,
__usb_get_extra_descriptor_min(), that takes the extra parameter.

---
--- a/drivers/usb/core/usb.c
+++ b/drivers/usb/core/usb.c
@@ -662,8 +662,8 @@ EXPORT_SYMBOL_GPL(usb_get_current_frame_
  * extra field of the interface and endpoint descriptor structs.
  */
 
-int __usb_get_extra_descriptor(char *buffer, unsigned size,
-			       unsigned char type, void **ptr, size_t minsize)
+int __usb_get_extra_descriptor_min(char *buffer, unsigned size,
+				   unsigned char type, void **ptr, size_t minsize)
 {
 	struct usb_descriptor_header *header;
 
@@ -689,6 +689,14 @@ int __usb_get_extra_descriptor(char *buf
 	}
 	return -1;
 }
+EXPORT_SYMBOL_GPL(__usb_get_extra_descriptor_min);
+
+#undef __usb_get_extra_descriptor
+int __usb_get_extra_descriptor(char *buffer, unsigned size,
+			       unsigned char type, void **ptr)
+{
+	return __usb_get_extra_descriptor_min(buffer, size, type, ptr, 0);
+}
 EXPORT_SYMBOL_GPL(__usb_get_extra_descriptor);
 
 /**
--- a/include/linux/usb.h
+++ b/include/linux/usb.h
@@ -334,7 +334,10 @@ struct usb_host_bos {
 };
 
 int __usb_get_extra_descriptor(char *buffer, unsigned size,
+	unsigned char type, void **ptr);
+int __usb_get_extra_descriptor_min(char *buffer, unsigned size,
 	unsigned char type, void **ptr, size_t min);
+#define __usb_get_extra_descriptor __usb_get_extra_descriptor_min
 #define usb_get_extra_descriptor(ifpoint, type, ptr) \
 				__usb_get_extra_descriptor((ifpoint)->extra, \
 				(ifpoint)->extralen, \
