From: Ben Hutchings <ben@decadent.org.uk>
Date: Mon, 17 Dec 2018 16:54:31 +0000
Subject: seq_file: Avoid ABI change in 3.16.62
Forwarded: not-needed

Commit c5220d8c2707 "Make file credentials available to the seqfile
interfaces" replaced the seq_file::user_ns member with a file member.

This structure is always allocated by built-in code, so we can add new
members at the end (so long as they are only used by built-in code).
But we must not remove or replace seq_file::user_ns as it can be used
by modules.

Restore seq_file::user_ns and its initialisation.  Move seq_file::file
to the end of the structure and hide it from both genksyms and modules.

Also hide the new #includes from genksyms as they may affect symbol
versions.

---
--- a/fs/seq_file.c
+++ b/fs/seq_file.c
@@ -69,6 +69,9 @@ int seq_open(struct file *file, const st
 	memset(p, 0, sizeof(*p));
 	mutex_init(&p->lock);
 	p->op = op;
+#ifdef CONFIG_USER_NS
+	p->user_ns = file->f_cred->user_ns;
+#endif
 
 	// No refcounting: the lifetime of 'p' is constrained
 	// to the lifetime of the file.
--- a/include/linux/seq_file.h
+++ b/include/linux/seq_file.h
@@ -7,8 +7,10 @@
 #include <linux/mutex.h>
 #include <linux/cpumask.h>
 #include <linux/nodemask.h>
+#ifndef __GENKSYMS__
 #include <linux/fs.h>
 #include <linux/cred.h>
+#endif
 
 struct seq_operations;
 
@@ -24,8 +26,13 @@ struct seq_file {
 	struct mutex lock;
 	const struct seq_operations *op;
 	int poll_event;
-	const struct file *file;
+#ifdef CONFIG_USER_NS
+	struct user_namespace *user_ns;
+#endif
 	void *private;
+#if !defined(__GENKSYMS__) && !defined(MODULE)
+	const struct file *file;
+#endif
 };
 
 struct seq_operations {
@@ -146,7 +153,7 @@ int seq_put_decimal_ll(struct seq_file *
 static inline struct user_namespace *seq_user_ns(struct seq_file *seq)
 {
 #ifdef CONFIG_USER_NS
-	return seq->file->f_cred->user_ns;
+	return seq->user_ns;
 #else
 	extern struct user_namespace init_user_ns;
 	return &init_user_ns;
