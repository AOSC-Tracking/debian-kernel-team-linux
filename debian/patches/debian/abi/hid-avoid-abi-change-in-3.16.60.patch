From: Ben Hutchings <ben@decadent.org.uk>
Date: Tue, 20 Nov 2018 19:31:38 +0000
Subject: HID: Avoid ABI change in 3.16.60
Forwarded: not-needed

Commit ffd2e9037f65 "HID: core: Fix size as type u32" changed the type
of one parameter to each of hid_input_report() and
hid_report_raw_event() from int to u32.  This is ABI-compatible on all
architectures, so hide the change from genksyms.

---
--- a/drivers/hid/hid-core.c
+++ b/drivers/hid/hid-core.c
@@ -1391,8 +1391,13 @@ out:
 }
 EXPORT_SYMBOL_GPL(__hid_request);
 
+#ifndef __GENKSYMS__
 int hid_report_raw_event(struct hid_device *hid, int type, u8 *data, u32 size,
 		int interrupt)
+#else
+int hid_report_raw_event(struct hid_device *hid, int type, u8 *data, int size,
+		int interrupt)
+#endif
 {
 	struct hid_report_enum *report_enum = hid->report_enum + type;
 	struct hid_report *report;
@@ -1456,7 +1461,11 @@ EXPORT_SYMBOL_GPL(hid_report_raw_event);
  *
  * This is data entry for lower layers.
  */
+#ifndef __GENKSYMS__
 int hid_input_report(struct hid_device *hid, int type, u8 *data, u32 size, int interrupt)
+#else
+int hid_input_report(struct hid_device *hid, int type, u8 *data, int size, int interrupt)
+#endif
 {
 	struct hid_report_enum *report_enum;
 	struct hid_driver *hdrv;
--- a/include/linux/hid.h
+++ b/include/linux/hid.h
@@ -757,7 +757,9 @@ extern int hidinput_connect(struct hid_d
 extern void hidinput_disconnect(struct hid_device *);
 
 int hid_set_field(struct hid_field *, unsigned, __s32);
+#ifndef __GENKSYMS__
 int hid_input_report(struct hid_device *, int type, u8 *, u32, int);
+#endif
 int hidinput_find_field(struct hid_device *hid, unsigned int type, unsigned int code, struct hid_field **field);
 struct hid_field *hidinput_get_led_field(struct hid_device *hid);
 unsigned int hidinput_count_leds(struct hid_device *hid);
@@ -1055,8 +1057,10 @@ static inline void hid_hw_wait(struct hi
 		hdev->ll_driver->wait(hdev);
 }
 
+#ifndef __GENKSYMS__
 int hid_report_raw_event(struct hid_device *hid, int type, u8 *data, u32 size,
 		int interrupt);
+#endif
 
 /* HID quirks API */
 u32 usbhid_lookup_quirk(const u16 idVendor, const u16 idProduct);
