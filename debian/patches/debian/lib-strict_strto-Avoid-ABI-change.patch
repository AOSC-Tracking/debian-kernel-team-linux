From: Ben Hutchings <ben@decadent.org.uk>
Subject: [PATCH] lib: strict_strto*: Avoid ABI change

Keep exporting strict_strto* even though they are now aliases for kstrto*.

diff --git a/include/linux/kernel.h b/include/linux/kernel.h
index c4b85c9..e725ec7 100644
--- a/include/linux/kernel.h
+++ b/include/linux/kernel.h
@@ -252,6 +252,13 @@ extern unsigned long simple_strtoul(const char *,char **,unsigned int);
 extern long simple_strtol(const char *,char **,unsigned int);
 extern unsigned long long simple_strtoull(const char *,char **,unsigned int);
 extern long long simple_strtoll(const char *,char **,unsigned int);
+
+/* for ABI compatibility */
+extern int __must_check strict_strtoul(const char *, unsigned int, unsigned long *);
+extern int __must_check strict_strtol(const char *, unsigned int, long *);
+extern int __must_check strict_strtoull(const char *, unsigned int, unsigned long long *);
+extern int __must_check strict_strtoll(const char *, unsigned int, long long *);
+
 #define strict_strtoul	kstrtoul
 #define strict_strtol	kstrtol
 #define strict_strtoull	kstrtoull
diff --git a/lib/vsprintf.c b/lib/vsprintf.c
index f3fd99a..3b4095c 100644
--- a/lib/vsprintf.c
+++ b/lib/vsprintf.c
@@ -120,6 +120,32 @@ long long simple_strtoll(const char *cp, char **endp, unsigned int base)
 }
 EXPORT_SYMBOL(simple_strtoll);
 
+/* for ABI compatibility */
+#undef strict_strtoul
+#undef strict_strtol
+#undef strict_strtoull
+#undef strict_strtoll
+int strict_strtoul(const char *cp, unsigned int base, unsigned long *res)
+{
+	return kstrtoul(cp, base, res);
+}
+EXPORT_SYMBOL(strict_strtoul);
+int strict_strtol(const char *cp, unsigned int base, unsigned long *res)
+{
+	return kstrtol(cp, base, res);
+}
+EXPORT_SYMBOL(strict_strtol);
+int strict_strtoull(const char *cp, unsigned int base, unsigned long *res)
+{
+	return kstrtoull(cp, base, res);
+}
+EXPORT_SYMBOL(strict_strtoull);
+int strict_strtoll(const char *cp, unsigned int base, unsigned long *res)
+{
+	return kstrtoll(cp, base, res);
+}
+EXPORT_SYMBOL(strict_strtoll);
+
 static noinline_for_stack
 int skip_atoi(const char **s)
 {
