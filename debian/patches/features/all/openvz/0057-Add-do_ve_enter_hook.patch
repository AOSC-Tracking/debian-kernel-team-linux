From 32e9103ae0ca45d00f252a0e39cfa2d7a3ec2731 Mon Sep 17 00:00:00 2001
From: Vitaliy Gusev <vgusev@openvz.org>
Date: Tue, 13 Jan 2009 18:23:53 +0300
Subject: [PATCH] Add do_ve_enter_hook

We will call this hook to enter to VE.

Signed-off-by: Vitaliy Gusev <vgusev@openvz.org>
Signed-off-by: Pavel Emelyanov <xemul@openvz.org>
---
 include/linux/ve.h  |    2 ++
 kernel/ve/ve.c      |    3 +++
 kernel/ve/vecalls.c |    7 +++++++
 3 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/include/linux/ve.h b/include/linux/ve.h
index f55f43e..fbd203c 100644
--- a/include/linux/ve.h
+++ b/include/linux/ve.h
@@ -336,6 +336,8 @@ extern spinlock_t ve_cleanup_lock;
 extern struct list_head ve_cleanup_list;
 extern struct task_struct *ve_cleanup_thread;
 
+extern int (*do_ve_enter_hook)(struct ve_struct *ve, unsigned int flags);
+
 extern unsigned long long ve_relative_clock(struct timespec * ts);
 
 #ifdef CONFIG_FAIRSCHED
diff --git a/kernel/ve/ve.c b/kernel/ve/ve.c
index 0248f38..fdedf8c 100644
--- a/kernel/ve/ve.c
+++ b/kernel/ve/ve.c
@@ -85,6 +85,9 @@ void do_env_free(struct ve_struct *env)
 EXPORT_SYMBOL(do_env_free);
 #endif
 
+int (*do_ve_enter_hook)(struct ve_struct *ve, unsigned int flags);
+EXPORT_SYMBOL(do_ve_enter_hook);
+
 #if defined(CONFIG_VE_ETHDEV) || defined(CONFIG_VE_ETHDEV_MODULE)
 INIT_KSYM_MODULE(vzethdev);
 INIT_KSYM_CALL(int, veth_open, (struct net_device *dev));
diff --git a/kernel/ve/vecalls.c b/kernel/ve/vecalls.c
index 33e3ab1..376bbfb 100644
--- a/kernel/ve/vecalls.c
+++ b/kernel/ve/vecalls.c
@@ -2397,6 +2397,12 @@ static int __init vecalls_init(void)
 	if (err < 0)
 		goto out_ioctls;
 
+	/* We can easy dereference this hook if VE is running
+	 * because in this case vzmon refcount > 0
+	 */
+	do_ve_enter_hook = do_env_enter;
+
+
 	return 0;
 
 out_ioctls:
@@ -2413,6 +2419,7 @@ out_vzmond:
 
 static void vecalls_exit(void)
 {
+	do_ve_enter_hook = NULL;
 	fini_vecalls_ioctls();
 	fini_vecalls_proc();
 	fini_vecalls_symbols();
-- 
1.6.2

